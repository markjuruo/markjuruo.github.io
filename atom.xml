<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>markjuruo&#39;s note</title>
  
  <subtitle>学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://markjuruo.ooo/"/>
  <updated>2019-02-03T12:29:56.269Z</updated>
  <id>https://markjuruo.ooo/</id>
  
  <author>
    <name>markjuruo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>旧事记 那些我玩过的游戏 2.2-2.3</title>
    <link href="https://markjuruo.ooo/2019/02/02/jiu-shi-ji-games/"/>
    <id>https://markjuruo.ooo/2019/02/02/jiu-shi-ji-games/</id>
    <published>2019-02-02T15:39:00.000Z</published>
    <updated>2019-02-03T12:29:56.269Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在颓了一天以后忽然想了很多东西。特记。</p></blockquote><h3 id="2010"><a href="#2010" class="headerlink" title="2010"></a>2010</h3><p>我大概是幼儿园时第一次接触了电子游戏。<br>那时候没有什么手机、电脑的。<br>我和我三个表哥不知道哪里搞来的游戏卡，插在游戏机里面，然后连上家里的一台旧电视。<br>像素不高，控制游戏的摇杆也算不上灵敏，但我们玩得开心。<br>那时候我们就玩《魂斗罗》，两个人一起，我们轮着来。<br>那时候我们玩并不为了从游戏里找乐子，就是四个人在一起，舒服。  </p><a id="more"></a><h3 id="2011"><a href="#2011" class="headerlink" title="2011"></a>2011</h3><p>小学一年级时，我拿到了我的第一个游戏机。说实话我并不怎么喜欢它，就是一些简单的 RPG 式互动。<br>同样是在小学一年级时，我第一次玩到了《植物大战僵尸》（P.V.Z.），这算是我玩的第一个电脑单机游戏。  </p><p>我相信这款游戏大多数和我年纪相仿的同学都玩过。我有次在学校里面哼起了这款游戏的一段配乐《Graze the Roof》（屋顶关卡），结果邻桌的同学也跟着唱了起来。<br>这种同志般的情感令人振奋。我甚至之后还去学了《植物大战僵尸》的主题曲《Zombies on your lawn》。 </p><h3 id="2013"><a href="#2013" class="headerlink" title="2013"></a>2013</h3><p>7K7K，4399 等在线小游戏网站蒸蒸日上，我记得我当时最喜欢玩的是《森林冰火人》《勇者之路精灵物语》。我玩的时候喜欢挑着无敌版的，打起来带感。<br>那时候打游戏的目的已经逐渐转变为消遣，也就是为了单纯的娱乐罢了。  </p><h3 id="2015"><a href="#2015" class="headerlink" title="2015"></a>2015</h3><p>《生死狙击》等多人射击游戏纷纷上线，我约莫是在小学四年级时接触到了。<br>那时候我觉得多人联机打有种说不出的快感，特别是能和别人交流着怎么进攻，怎么防守。  </p><p>我第一次玩到了《红色警戒》这样一款单机的及时战略游戏。我急得我最喜欢用苏联，掌握石油开采，赚钱很快，基本都能打赢电脑。</p><p>电脑上不知道为什么有《极品飞车7》，我于是便尝试了一下。画质还好，游戏性很强，开氮气加速撞爆警车的感觉很刺激。</p><p>另外还试了一下《愤怒的小鸟》。</p><h3 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h3><p>《王者荣耀》上线了。说实话，当时我对它一点不感兴趣。我当时觉得什么人会无聊到控制一个小人在一个狭窄的封闭的小空间里四处乱逛还要把对面的什么窝给掏了。我无法理解那种乐趣。  </p><p>不过我还是去尝试了一下。在一个寒假里面我安装了这个游戏，结果连续打了三把都是赢的就卸载了，“实在没什么好打的。”  </p><p>不过到现在，放假的时候，还是会安装个，和三个表哥联机玩个一两把。 </p><h3 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h3><p>《狼人杀》手游上线了。<br>6月份，那时候快小学毕业了，（感觉）没啥压力，居然无聊到下载了一个来玩。<br>那时候玩，就是很享受那种团队合作推理的快感。  </p><p>《弄死火柴人（手游）》，我玩过的一款十分解压的游戏，大概就是用各种方式来折磨一个可怜的火柴人。</p><p>《瘟疫公司》，十分真实的生存经营游戏，我玩完之后就养成了勤洗手的好习惯。。。</p><h3 id="2018-2019"><a href="#2018-2019" class="headerlink" title="2018-2019"></a>2018-2019</h3><blockquote><p>开始吹*了。</p></blockquote><p>《信息学奥赛》《NOIP》这一类高级游戏让我眼前一亮，说实话我很喜欢，不过难度对我来说蛮大的。  </p><p>可惜的是我不肯放弃。一直在学校信奥社团里面呆着，，浪费了一个位置。。。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>事实上我对游戏并不是十分感兴趣，到今天能让我觉得影响深刻的也就是《植物大战僵尸》和《愤怒的小鸟》两款游戏最初的版本。<br>从配乐到游戏构建都深入人心。<br>说实话《植物大战僵尸2》和《愤怒的小鸟2》我都不是很玩得起来，总觉得什么东西变了，或者说，它们都多了太多不该有的东西，例如联机功能和奇怪的广告。<br>我并不热衷于此，但是它们的确带给了我很多影响。  </p><p>我并不打算摒弃它们，但是时间会带着它们离开。<br>可能没有告别，<br>我也许会直接忘却罢了。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在颓了一天以后忽然想了很多东西。特记。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;2010&quot;&gt;&lt;a href=&quot;#2010&quot; class=&quot;headerlink&quot; title=&quot;2010&quot;&gt;&lt;/a&gt;2010&lt;/h3&gt;&lt;p&gt;我大概是幼儿园时第一次接触了电子游戏。&lt;br&gt;那时候没有什么手机、电脑的。&lt;br&gt;我和我三个表哥不知道哪里搞来的游戏卡，插在游戏机里面，然后连上家里的一台旧电视。&lt;br&gt;像素不高，控制游戏的摇杆也算不上灵敏，但我们玩得开心。&lt;br&gt;那时候我们就玩《魂斗罗》，两个人一起，我们轮着来。&lt;br&gt;那时候我们玩并不为了从游戏里找乐子，就是四个人在一起，舒服。  &lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://markjuruo.ooo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="旧事记" scheme="https://markjuruo.ooo/tags/%E6%97%A7%E4%BA%8B%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>旧事记 初二上 1.21-1.24</title>
    <link href="https://markjuruo.ooo/2019/01/24/jiu-shi-ji-chu-er-shang-1-21-1-24/"/>
    <id>https://markjuruo.ooo/2019/01/24/jiu-shi-ji-chu-er-shang-1-21-1-24/</id>
    <published>2019-01-24T14:43:00.000Z</published>
    <updated>2019-01-26T12:25:04.134Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>期末考试似乎还行，忍不住续写期中考试后写的<a href="/2018/11/21/jiu-shi-ji-xian-yu-11-12-11-21/">《咸鱼》</a></p></blockquote><p>我不知道要从哪一次失败开始写起。<br>怕是太多罢了。<br>我大概是从进初中开始才发觉了生活没有我想象的这么轻松。<br>我是到了现在才知道成功这条路根本没有这么好走。<br>我似乎是失去了很多，但我却常常不合时宜地感到知足，<br>我似乎是习惯了，习惯了耀眼的是别人，灰暗的是自己。<br>我的确感到痛苦，<br>但是痛苦过后，又会把伤口掩盖起来，<br>我把它藏起来，好像这样它就不会对我造成伤害，<br>“我他妈的，再也受不了了啊。”<br><a id="more"></a></p><h2 id="2018-年"><a href="#2018-年" class="headerlink" title="2018 年"></a>2018 年</h2><p>这一年，我从初一跨入初二。<br>我自以为摆脱了初一的稚嫩，自以为能够“突飞猛进”。<br>我欣喜若狂地参加了 2050 大会，<br>也毫不顾忌地立下许多 Flag，<br>我信心满满地参加了 NOIP 信奥比赛，<br>然后灰头土脸地接受失败。  </p><p>我似乎是在期中考试前，<br>忽然翻到了《课堂内外》上刊登了我参加 2050 的内容，<br>我忽然心很痛，<br>因为那时我刚刚参加完 NOIP 初赛，<br>也差不多知道自己只能止步于此了。<br>那些我曾经说的豪言壮志，<br>“真他妈可笑。”  </p><p>我在期中考复习阶段爱上了《咸鱼》这首歌，<br>因为我在我们班级 MV 中听到了它。<br>我第一次听似乎是在小学三年级。<br>我那时不过是觉得很好听。<br>可我看到我们班的班级 MV 时，看到初一的我时，<br>我哭了出来，尽管别人都是在欢呼着，在笑着。<br>我忽然想起来初一的我是多么期待能在信奥上大方光彩，<br>“我的梦想，就这么不值钱吗。”  </p><p>终于，期中考似乎是有了一点小小的进步，<br>至少，我有了一定的自信的资本。<br>事实上我看到期中考成绩的时候，情绪十分激动，<br>我打开音响，放《咸鱼》。<br>然后让自己无拘束的哭出来。  </p><p>这之后，我似乎变得聒噪起来。<br>我开始静不下心来，<br>我也不知道为什么。<br>但事实上我根本不想知道，我甚至觉得这样挺好。  </p><h2 id="2019-年"><a href="#2019-年" class="headerlink" title="2019 年"></a>2019 年</h2><p>期末模拟考的成绩并不让人满意，<br>我于是重新开始反思，<br>我开始遏制住焦躁的情绪，<br>对于期末考，<br>“我嘴上说着不要，身体却很诚实。”  </p><p>终于，我考出了对我来说十分优秀的成绩。<br>不过我知道是超常发挥，<br>毕竟我的语文 112 这种恶心的高分并不是想考就能考出来的。<br>科学的 158 分也算是状态较好的发挥，<br>但是我仍然是十分高兴，<br>毕竟没有辜负之前的努力。<br>今年，总算是可以过个好年了。  </p><hr><p>这里本来写了一些过分诚实的话，现在删去。见谅。。 </p><hr><p>抒情结束。</p><blockquote><p>另：<br>祝我新年快乐！<br>祝 markjuruo 小博客常更！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;期末考试似乎还行，忍不住续写期中考试后写的&lt;a href=&quot;/2018/11/21/jiu-shi-ji-xian-yu-11-12-11-21/&quot;&gt;《咸鱼》&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我不知道要从哪一次失败开始写起。&lt;br&gt;怕是太多罢了。&lt;br&gt;我大概是从进初中开始才发觉了生活没有我想象的这么轻松。&lt;br&gt;我是到了现在才知道成功这条路根本没有这么好走。&lt;br&gt;我似乎是失去了很多，但我却常常不合时宜地感到知足，&lt;br&gt;我似乎是习惯了，习惯了耀眼的是别人，灰暗的是自己。&lt;br&gt;我的确感到痛苦，&lt;br&gt;但是痛苦过后，又会把伤口掩盖起来，&lt;br&gt;我把它藏起来，好像这样它就不会对我造成伤害，&lt;br&gt;“我他妈的，再也受不了了啊。”&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://markjuruo.ooo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="旧事记" scheme="https://markjuruo.ooo/tags/%E6%97%A7%E4%BA%8B%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>如何用 Python 实现基于 UDP 协议的聊天工具？</title>
    <link href="https://markjuruo.ooo/2018/12/09/ru-he-yong-python-shi-xian-ji-yu-tcp-ip-xie-yi-de-liao-tian-gong-ju/"/>
    <id>https://markjuruo.ooo/2018/12/09/ru-he-yong-python-shi-xian-ji-yu-tcp-ip-xie-yi-de-liao-tian-gong-ju/</id>
    <published>2018-12-09T04:14:00.000Z</published>
    <updated>2019-01-24T14:42:54.733Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近刚自学的 Python ，有 C++ 的基础上手还算快。Python 的网络库使用十分简便，此文简单记录基于 UDP 协议的聊天程序编写过程。<br>相比 TCP-IP 协议， 使用 UDP 协议写出的程序在我看来结构更加清晰，且也比较方便之后多线程的加入。</p><blockquote><p><strong>主要思路</strong><br>服务器端负责处理信息转发，将某个客户端发来的消息转发到别的客户端，以达到信息交换的功能，即简单的聊天功能<br>客户端需要做到接收消息和发送消息，并且这两个进程必须是同时进行的。  </p></blockquote><a id="more"></a><h2 id="尝鲜"><a href="#尝鲜" class="headerlink" title="尝鲜"></a>尝鲜</h2><p><a href="https://github.com/markjuruo/Python-UDP-Chating/blob/master/server.exe?raw=true" target="_blank" rel="noopener"><strong>服务器下载</strong></a><br><a href="https://github.com/markjuruo/Python-UDP-Chating/blob/master/client.exe?raw=true" target="_blank" rel="noopener"><strong>客户端下载</strong></a></p><p>效果图：</p><p><img src="https://img2018.cnblogs.com/blog/1532635/201812/1532635-20181215122336324-329967802.jpg" alt=""></p><h2 id="简单架构"><a href="#简单架构" class="headerlink" title="简单架构"></a>简单架构</h2><p><img src="https://img2018.cnblogs.com/blog/1532635/201812/1532635-20181212212525334-1172894300.jpg" alt="结构图"></p><h3 id="基于-UDP-协议编写服务器端"><a href="#基于-UDP-协议编写服务器端" class="headerlink" title="基于 UDP 协议编写服务器端"></a>基于 UDP 协议编写服务器端</h3><p>不得不说，使用 UDP 协议会比 TCP-IP 协议简洁很多，最核心的部分便是 <code>recvfrom()</code> 和 <code>sendto()</code> 。与 TCP-IP 协议下的 <code>recv()</code> 和 <code>send()</code> 不同，UDP 下能够更加明确的获取收到信息的内容和来源。<br>以下便是一个简单的基于 UDP 协议的服务器模型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket <span class="comment"># 引用网络库</span></span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> exit <span class="comment"># 从 System 借一个 exit() 函数</span></span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) <span class="comment"># 声明对象 s</span></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'127.0.0.1'</span> <span class="comment"># 服务器 IP 地址</span></span><br><span class="line">PORT = <span class="number">10888</span> <span class="comment"># 服务器端口</span></span><br><span class="line"></span><br><span class="line">s.bind((HOST, PORT)) <span class="comment"># 启动服务器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>: <span class="comment"># 进入消息循环</span></span><br><span class="line">    (data, addr) = s.recvfrom(<span class="number">1024</span>) <span class="comment"># 接收消息</span></span><br><span class="line">    print(<span class="string">"Recv-data"</span>, data.decode(<span class="string">'utf-8'</span>)) <span class="comment"># 将收到的消息转码并输出</span></span><br><span class="line">    s.sendto(data, addr) <span class="comment"># 将消息发回</span></span><br></pre></td></tr></table></figure><p>需要注意的是 HOST 里的值是需要改的。把它改成你自己这台电脑的 ip 地址（至于如何查询本机 IP 地址请自行百度，或者你可以在 cmd 中输入 ipconfig 找到 “IPv4地址” 一项）</p><p>不难看出，<code>recvfrom()</code> 函数获取的是一个元组，包含了数据和地址两个信息，因此我们使用 <code>data,addr</code> 将其保存。<br>在输出时，<code>data.decode(&#39;utf-8&#39;)</code> 的操作与下面客户端 <code>data.encode(&#39;utf-8&#39;)</code> 的操作相对应。在信息传输的过程中，我们需要声明用哪一种编码进行传输和保存。</p><blockquote><p>utf-8 是目前较为常用的包含汉字的编码。其他常见编码还有 unicode，ascii，utf-16 等。</p></blockquote><p>而服务器接收到的消息是经过 <code>encode(&#39;utf-8&#39;)</code> 处理的，于是此时需要 <code>decode(&#39;utf-8&#39;)</code> 进行解码。</p><h3 id="基于-UDP-协议编写客户端"><a href="#基于-UDP-协议编写客户端" class="headerlink" title="基于 UDP 协议编写客户端"></a>基于 UDP 协议编写客户端</h3><p>有服务器进行接收了，就必须得有客户端来发送。<br>一下展示了一个简单的具有传输和接收信息功能的服务器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket <span class="comment"># 引用网络库</span></span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> exit <span class="comment"># 从 System 借一个 exit() 函数</span></span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) <span class="comment"># 声明对象 s</span></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'127.0.0.1'</span> <span class="comment"># 服务器 IP 地址</span></span><br><span class="line">PORT = <span class="number">10888</span> <span class="comment"># 服务器端口</span></span><br><span class="line"></span><br><span class="line">s.connect((HOST, PORT)) <span class="comment"># 连接到服务器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>: <span class="comment"># 进入消息循环</span></span><br><span class="line">    data = input(<span class="string">"Input Data: "</span>) <span class="comment"># 输入待发送的数据</span></span><br><span class="line">    s.sendto(data.encode(<span class="string">'utf-8'</span>), (HOST,PORT)) <span class="comment"># 发送到服务器</span></span><br><span class="line">    (data, addr) = s.recvfrom(<span class="number">1024</span>) <span class="comment"># 从服务器接收信息</span></span><br><span class="line">    print(<span class="string">"Recv-Data: "</span>, data.decode(<span class="string">'utf-8'</span>)) <span class="comment"># 输出接收到的信息</span></span><br></pre></td></tr></table></figure><p>此处的 <code>s.connect()</code> 与服务器中的 <code>s.bind()</code> 略有不同，<del>至于为什么我正在研究</del><br>由此我们可以了解，<code>sendto()</code> 函数的两个参数含义：前一个是设置了编码格式的信息内容，后一个是一组元组，包含 HOST 和 PORT ，即需要发送到的主机的 IP 地址（一般用 IPv4 ）和端口号（注意端口号必须是数字类型）。不难看出，<code>s.sendto()</code> 是具有方向性的，说清楚发给谁，就只能谁接收到。<br>同时可以发现，<code>s.recvfrom(1024)</code> 是不具有方向性的，只要是发到我的，不管是谁，我都接收。<br><code>s.recvfrom()</code> 是开放的，<code>s.sendto()</code> 要是开放的话可能会出事。</p><h2 id="利用服务器作为中转站"><a href="#利用服务器作为中转站" class="headerlink" title="利用服务器作为中转站"></a>利用服务器作为中转站</h2><p>上面给出了一幅基本结构图，是为了简单叙述 socket 库中每个函数的作用。<br>下面这张图是为了体现服务器的基本作用：中转交接。  </p><p><img src="https://img2018.cnblogs.com/blog/1532635/201812/1532635-20181215102600901-282617736.jpg" alt=""></p><p>从图中我们不难发现无论是你还是其它用户，一旦需要信息交换，就必须经过服务器。<br>事实上，你可以选择不经过，但是为了让程序更有条理，我选择利用服务器作为中转站。  </p><p>那么问题来了，如果要做到信息交换，就必然涉及到两台及以上的主机。此时，前面我们所写的服务器模型似乎无法完成交换任务，因为它只有接收的功能，那么该如何解决？  </p><blockquote><p>以下服务器称为 server，客户端称为 client</p></blockquote><p>我的思路是这样的：<br>利用 python 的字典（dict）储存每一个加入到 server 的 client。然后在发送的时候，遍历整个 dict ，把所有储存的主机都发送一遍。<br>（讲的什么乱七八糟的，直接上程序）<br>至于不知道 Python 字典是什么，请自行学习：<a href="http://www.runoob.com/python/python-dictionary.html" target="_blank" rel="noopener">Python 字典(Dictionary) | 菜鸟教程</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># server 2.0 实现信息交换</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket <span class="comment"># 引用网络库</span></span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> exit <span class="comment"># 从 System 借一个 exit() 函数</span></span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) <span class="comment"># 声明对象 s</span></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'127.0.0.1'</span> <span class="comment"># 服务器 IP 地址</span></span><br><span class="line">PORT = <span class="number">10888</span> <span class="comment"># 服务器端口</span></span><br><span class="line"></span><br><span class="line">s.bind((HOST, PORT)) <span class="comment"># 启动服务器</span></span><br><span class="line"></span><br><span class="line">user = &#123;&#125; <span class="comment"># 设置一个空的 dict </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>: <span class="comment"># 进入消息循环</span></span><br><span class="line">   (data, addr) = s.recvfrom(<span class="number">1024</span>) <span class="comment"># 接收到消息</span></span><br><span class="line">   <span class="keyword">if</span> user.get(addr, <span class="keyword">False</span>) == <span class="keyword">False</span>: <span class="comment"># 利用 get 函数来确定是否是新 client</span></span><br><span class="line">      user[addr] = data.decode(<span class="string">'utf-8'</span>) <span class="comment"># 如果是的话，把它第一个发来的信息默认为用户名</span></span><br><span class="line">      print(<span class="string">"IP(%s) NickName(%s) Join"</span> % (addr, data.decode(<span class="string">'utf-8'</span>))) <span class="comment"># 输出用户加入信息</span></span><br><span class="line">   print(addr,<span class="string">" : "</span>, data.decode(<span class="string">'utf-8'</span>)) <span class="comment"># 输出：谁发的，发了什么</span></span><br><span class="line">   <span class="keyword">for</span> key, value <span class="keyword">in</span> user.items(): <span class="comment"># 遍历已经储存的 client</span></span><br><span class="line">      s.sendto(data, key) <span class="comment"># 向这些 client 传输某个用户发出的信息。</span></span><br></pre></td></tr></table></figure><p>这串代码码风并不是很和谐，但是条理还算清晰。重点：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> user.get(addr, <span class="keyword">False</span>) == <span class="keyword">False</span>: </span><br><span class="line">      user[addr] = data </span><br><span class="line">      print(<span class="string">"IP(%s) NickName(%s) Join"</span> % (addr, data.decode(<span class="string">'utf-8'</span>)))</span><br></pre></td></tr></table></figure><p>首先 Python 中 dict 的 get 函数用法请自行学习。<br>我在这里把 addr ，即用户的 IP 地址作为关键字，而它发送的第一条信息作为值。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> user.get(addr, <span class="keyword">False</span>) == <span class="keyword">False</span>:</span><br></pre></td></tr></table></figure></p><p>这一句话便起到了去重的作用，如果该 addr 关键字已经被包含的话，就不再把它重复纳入 dict 中。但是如果原先没有这个关键字，那么需要把它加入到 dict 中。并且，以用户发的第一条信息作为该关键字的值，即用户名，相当于构成了一个 <code>{ IP 地址 : 用户名 }</code> 的 dict。  </p><p>客户端的程序基本不变，就是在进入消息循环之前（就是 <code>while True:</code> 之前）需要加上一段，提示用户输入用户名，并且作为第一条消息发出。即：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NickName = input(<span class="string">"Please input your nick-name : "</span>)</span><br><span class="line">s.sendto(NickName.encode(<span class="string">'utf-8'</span>), (HOST, PORT))</span><br></pre></td></tr></table></figure></p><p>另外，这里的最后一段代码也可以适当修改一下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> user.items():</span><br><span class="line">      s.sendto(data, key)</span><br></pre></td></tr></table></figure></p><p>改成：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> user.items():</span><br><span class="line">         <span class="keyword">if</span> key != addr:</span><br><span class="line">            s.sendto(data.encode(<span class="string">'utf-8'</span>), key)</span><br></pre></td></tr></table></figure></p><p>addr 就是这条信息的发出者，既然是他发出的，那他自己的客户端必定显示了他输入的内容，如果再显示一遍就显得累赘了。</p><h2 id="如何实现多线程"><a href="#如何实现多线程" class="headerlink" title="如何实现多线程"></a>如何实现多线程</h2><p>这一段我挣扎了很久，因为线程编程对于一个长期使用低版本 C++ 的孩子来说十分陌生。  </p><p>在使用之前我们先得明确，为什么我们要用线程？  </p><p>在之前 “利用服务器作为中转站” 中我们编写了一个支持信息交换的程序，但是使用时我们不难发现，这个程序有一个很大的弊端：输发接收不同步，即只能发一条，接收一条，不发就接收不到。  </p><p>遇到这个问题的时候我第一时间想到了利用缓冲区解决，以前用 C++ 写 《Tank War》 的时候不会多线程，就是每 5 ms 刷新一次缓冲区，检测是否输入字符，如果输入就执行相应的操作，否则程序按部就班的进行。但是用在这里肯定不现实，5 ms 可能连个 “f__k” 都打不完。</p><p>于是只好去简单学习下多线程，我利用的是<a href="https://www.cnblogs.com/yeayee/p/4952022.html" target="_blank" rel="noopener">这篇教程</a> ，简单明了，但是折腾了半天才应用到我的程序上来。  </p><p>另外要讲的是，需要多线程的事实上仅有 client ，因为 client 需要同时做两件事：发送和接收，而服务器似乎没有这个负担，它仅需转发。</p><p>所以，我们聚焦到客户端来：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading, time <span class="comment"># 包含 threading（线程控制）和 time （时间控制）</span></span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> exit</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'192.168.1.2'</span></span><br><span class="line">PORT = <span class="number">10888</span></span><br><span class="line"></span><br><span class="line">s.connect((HOST, PORT))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一下定义两个函数 RECV() 和 SEND()，分别进行收、发</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RECV</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">      (data, addr) = s.recvfrom(<span class="number">1024</span>)</span><br><span class="line">      print(<span class="string">"HOST: "</span>, data.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">      time.sleep(<span class="number">1</span>)</span><br><span class="line">      </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SEND</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">      data = input(<span class="string">""</span>)</span><br><span class="line">      s.sendto(data.encode(<span class="string">'utf-8'</span>), (HOST, PORT))</span><br><span class="line">      time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">t1 = threading.Thread(target=RECV) <span class="comment"># 将 RECV() 放入线程 t1</span></span><br><span class="line">t2 = threading.Thread(target=SEND) <span class="comment"># 将 SEND() 放入线程 t2</span></span><br><span class="line"></span><br><span class="line">t1.start() <span class="comment"># 启动线程 t1</span></span><br><span class="line">t2.start() <span class="comment"># 启动线程 t2</span></span><br><span class="line">t1.join()</span><br><span class="line">t2.join()</span><br><span class="line"><span class="comment"># join所完成的工作就是线程同步</span></span><br><span class="line"><span class="comment"># 即主线程任务结束之后，进入阻塞状态</span></span><br><span class="line"><span class="comment"># 一直等待其他的子线程执行结束之后，主线程再终止</span></span><br></pre></td></tr></table></figure></p><p>我们把 client 的两个任务：收、发打包成了两个函数，放入两个不同的进程中，再让这两个进程同步运行，就做到了收、发同时进行的目的。<br>至于每个函数中出现的 <code>time.sleep(1)</code>，是推迟时间，相当于暂停一秒。如果不写上会出现一种很玄学错误，就是收发都变得不完整，可能你发的是 “1234567” ，server 接收到的却是 “12”；server 发来了 “kkksc03” ，结果 client只接收到了 “kkk”。<code>time.sleep(1)</code> 的操作就是为了让它有充足的时间完成自己的任务，慢下来，也许能做的更好，生活也豁然开朗。  </p><p>至此，你已经完成了一个客户端的基本操作了。</p><h2 id="让我知道你是谁"><a href="#让我知道你是谁" class="headerlink" title="让我知道你是谁"></a>让我知道你是谁</h2><p>注意，如果使用以上 client ，还有一点每种不足，那就是不论谁发来的信息，都是如下显示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HOST: 123</span><br><span class="line">HOST: hello!</span><br><span class="line">HOST: ...</span><br></pre></td></tr></table></figure></p><p>这样似乎并不是很友好。所以，为了让它成为一个合格的通讯工具，我们还要再进行一点小小的修改：  </p><p>首先，找到 client 中的 RECV() 函数，把 <code>print</code> 中恼人的 <code>&quot;HOST&quot;</code> 删去：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RECV</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">      (data, addr) = s.recvfrom(<span class="number">1024</span>)</span><br><span class="line">      print(=data.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">      time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></p><p>然后，找到 server 中的这一段：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> user.items():</span><br><span class="line">         <span class="keyword">if</span> key != addr:</span><br><span class="line">            s.sendto(data, key)</span><br></pre></td></tr></table></figure></p><p>还记得我们之前建立的 user 字典是以 <code>{ IP 地址 : 用户名 }</code> 的格式来储存的吗？<br>我们现在手上有 addr ，想要知道其用户名，只要用 <code>user[addr]</code> 就可以获取了。<br>然后，我们可以把用户名和其发出信息整合，如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data = user[addr] + <span class="string">" : "</span> + data.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">      <span class="keyword">for</span> key, value <span class="keyword">in</span> user.items():</span><br><span class="line">         <span class="keyword">if</span> key != addr:</span><br><span class="line">            s.sendto(data.encode(<span class="string">'utf-8'</span>), key)</span><br></pre></td></tr></table></figure></p><p>OK，大功告成！再次运行，你就能看到每个人的用户名了！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">老王: Hello!</span><br><span class="line">小明: Hi!</span><br><span class="line">小红: Have a nice day!</span><br></pre></td></tr></table></figure></p><h2 id="最后说一句"><a href="#最后说一句" class="headerlink" title="最后说一句"></a>最后说一句</h2><p>写了这么多，你难道没发现什么问题吗？<br>没错，我们在 server 和 client 的程序开头总有一段：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HOST = <span class="string">'127.0.0.1'</span></span><br><span class="line">PORT = <span class="number">10888</span></span><br></pre></td></tr></table></figure></p><p>那么问题来了，不论是针对 server 还是 client，在不同的电脑上打开，IP 地址（也就是其 HOST 的值）都是不同的。所以我们需要进行再一次修改：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HOST = input(<span class="string">"Input Server IP address: "</span>)</span><br><span class="line">PORT = <span class="number">10888</span></span><br></pre></td></tr></table></figure></p><p>把 server 和 client 都改成以上格式，便大功告成了。使用的时候只要查询一下本机（服务器） IP 地址，输入即可。</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>（不要脸的放上了版权信息）</p><h3 id="server-服务器"><a href="#server-服务器" class="headerlink" title="server 服务器"></a>server 服务器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Hosted By markjuruo(Linzhihan)"</span>)</span><br><span class="line">print(<span class="string">"To view more, please visit"</span>)</span><br><span class="line">print(<span class="string">"https://github.com/markjuruo/Python-UDP-Chating\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> exit</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line">HOST = input(<span class="string">"Please input IP address: "</span>)</span><br><span class="line">PORT = <span class="number">10888</span></span><br><span class="line"></span><br><span class="line">s.bind((HOST, PORT))</span><br><span class="line"></span><br><span class="line">user = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">   (data, addr) = s.recvfrom(<span class="number">1024</span>)</span><br><span class="line">   <span class="keyword">if</span> user.get(addr, <span class="keyword">False</span>) == <span class="keyword">False</span>:</span><br><span class="line">      user[addr] = data.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">      print(<span class="string">"IP(%s) NickName(%s) Join"</span> % (addr, data.decode(<span class="string">'utf-8'</span>)))</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">      print(addr,<span class="string">" : "</span>, data.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">      data = user[addr] + <span class="string">" : "</span> + data.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">      <span class="keyword">for</span> key, value <span class="keyword">in</span> user.items():</span><br><span class="line">         <span class="keyword">if</span> key != addr:</span><br><span class="line">            s.sendto(data.encode(<span class="string">'utf-8'</span>), key)</span><br></pre></td></tr></table></figure><h3 id="cilent-客户端"><a href="#cilent-客户端" class="headerlink" title="cilent 客户端"></a>cilent 客户端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Hosted By markjuruo(Linzhihan)"</span>)</span><br><span class="line">print(<span class="string">"To view more, please visit"</span>)</span><br><span class="line">print(<span class="string">"https://github.com/markjuruo/Python-UDP-Chating\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading, time</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> exit</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line">HOST = input(<span class="string">"Please input IP address: "</span>)</span><br><span class="line">PORT = <span class="number">10888</span></span><br><span class="line"></span><br><span class="line">NickName = input(<span class="string">"Please input your nick-name : "</span>)</span><br><span class="line">s.sendto(NickName.encode(<span class="string">'utf-8'</span>), (HOST, PORT))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RECV</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">      (data, addr) = s.recvfrom(<span class="number">1024</span>)</span><br><span class="line">      print(data.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">      time.sleep(<span class="number">1</span>)</span><br><span class="line">      </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SEND</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">      data = input(<span class="string">""</span>)</span><br><span class="line">      s.sendto(data.encode(<span class="string">'utf-8'</span>), (HOST, PORT))</span><br><span class="line">      time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">t1 = threading.Thread(target=RECV)</span><br><span class="line">t2 = threading.Thread(target=SEND)</span><br><span class="line"></span><br><span class="line">t1.start()</span><br><span class="line">t2.start()</span><br><span class="line">t1.join()</span><br><span class="line">t2.join()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近刚自学的 Python ，有 C++ 的基础上手还算快。Python 的网络库使用十分简便，此文简单记录基于 UDP 协议的聊天程序编写过程。&lt;br&gt;相比 TCP-IP 协议， 使用 UDP 协议写出的程序在我看来结构更加清晰，且也比较方便之后多线程的加入。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;主要思路&lt;/strong&gt;&lt;br&gt;服务器端负责处理信息转发，将某个客户端发来的消息转发到别的客户端，以达到信息交换的功能，即简单的聊天功能&lt;br&gt;客户端需要做到接收消息和发送消息，并且这两个进程必须是同时进行的。  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://markjuruo.ooo/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="项目" scheme="https://markjuruo.ooo/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>[经验] F12大法的正确打开方式</title>
    <link href="https://markjuruo.ooo/2018/11/22/jing-yan-f12-da-fa-de-zheng-que-da-kai-fang-shi/"/>
    <id>https://markjuruo.ooo/2018/11/22/jing-yan-f12-da-fa-de-zheng-que-da-kai-fang-shi/</id>
    <published>2018-11-22T12:49:00.000Z</published>
    <updated>2018-12-13T10:01:03.489Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>F12</code> 似乎越来越流行了。<br>但凡是个会点 Information Technology 的犇犇都无时无刻享受着使用 <code>F12</code> 调教网页的快感。<br>但是常常有人发问，这东西究竟有个什么卵用？  </p><p>既然您诚心诚意的发问了，我就大发慈悲地告诉您——<br>不光有用，而且很邪恶。<br>于是本文将会记录几个较为常用的 <code>F12</code> 使用方法。<br><a id="more"></a></p><hr><div class="tip"><br>警告，本文涉及各种侵权。<br>若有不当请与我联系：<br>1. 评论区<br>2. 邮箱： <a href="mailto:markjuruo@163.com" target="_blank" rel="noopener">markjuruo@163.com</a><br></div><hr><div class="tip"><br>再次警告，本文涉及各种侵权。<br>若有不当请与我联系：<br>1. 评论区<br>2. 邮箱： <a href="mailto:markjuruo@163.com" target="_blank" rel="noopener">markjuruo@163.com</a><br></div><h2 id="先来点干货"><a href="#先来点干货" class="headerlink" title="先来点干货"></a>先来点干货</h2><p>我们拿 网易云音乐（ <a href="https://music.163.com/" target="_blank" rel="noopener">https://music.163.com/</a> ） 当做小白鼠。  </p><p>一般的，当您想要把网上的视频保存到本地，只需要在该视频上单击右键，然后选择 “视频另存为” 即可。但是网易云音乐中，您会发现鼠标右键单击后“视频另存为”的功能被十分不友好的删去了。</p><p><img src="https://i.loli.net/2018/11/22/5bf6ad48d740b.jpg" alt="鼠标右键单击，“视频另存为”一项并未出现"></p><p>怎么办？我该如何下载视频呢？<br>这个时候，<code>F12</code> 大法的力量便得以被使用了：<br>不难看见，右键单击后，出现的最后一项：“检查”，便是我们所熟悉的 <code>F12</code> 大法。</p><p><img src="https://i.loli.net/2018/11/22/5bf6af1bee43f.jpg" alt="检查"></p><p>点击之后，理应可以出现以下界面：</p><p><img src="https://i.loli.net/2018/11/22/5bf6b0a54005a.jpg" alt="F12界面"></p><p>我们仔细观察右侧的网页代码内容，不难发现，可怜的 video 标签被裸露在外面。</p><p><img src="https://i.loli.net/2018/11/22/5bf6b0a341710.jpg" alt="video标签"></p><p>video 标签中包含一项 src ，即为该视频的源地址。我们双击 src 后的内容，然后 <code>ctrl</code> + <code>c</code> 获取。</p><p><img src="https://i.loli.net/2018/11/22/5bf6b0a128612.jpg" alt="获取视频源地址"></p><p>随后，复制到浏览器的地址栏中并发动搜索（按下回车）。此时，再右键单击视频，“视频另存为”便重新出现了。</p><p><img src="https://i.loli.net/2018/11/22/5bf6b0a4ad527.jpg" alt="“视频另存为”标签重新出现"></p><h2 id="再来点干货"><a href="#再来点干货" class="headerlink" title="再来点干货"></a>再来点干货</h2><div class="tip"><br>  再次警告，本文涉及各种侵权。<br>若有不当请与我联系：<br>1. 评论区<br>2. 邮箱： <a href="mailto:markjuruo@163.com" target="_blank" rel="noopener">markjuruo@163.com</a><br></div><p>/<em> 等待更新 </em>/</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;F12&lt;/code&gt; 似乎越来越流行了。&lt;br&gt;但凡是个会点 Information Technology 的犇犇都无时无刻享受着使用 &lt;code&gt;F12&lt;/code&gt; 调教网页的快感。&lt;br&gt;但是常常有人发问，这东西究竟有个什么卵用？  &lt;/p&gt;
&lt;p&gt;既然您诚心诚意的发问了，我就大发慈悲地告诉您——&lt;br&gt;不光有用，而且很邪恶。&lt;br&gt;于是本文将会记录几个较为常用的 &lt;code&gt;F12&lt;/code&gt; 使用方法。&lt;br&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://markjuruo.ooo/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="经验" scheme="https://markjuruo.ooo/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>旧事记 咸鱼 11.12-11.21</title>
    <link href="https://markjuruo.ooo/2018/11/21/jiu-shi-ji-xian-yu-11-12-11-21/"/>
    <id>https://markjuruo.ooo/2018/11/21/jiu-shi-ji-xian-yu-11-12-11-21/</id>
    <published>2018-11-21T11:16:00.000Z</published>
    <updated>2018-11-25T01:43:04.802Z</updated>
    
    <content type="html"><![CDATA[<p>期中考试结束了。我的成绩并不算拔尖，但我看到兴奋得哭了出来。<br>这不是我今年第一次哭了。<br>我总感觉自己受的委屈太多了。我是一名信息竞赛选手，却连 NOIP 的初赛都没考进过。我那么多次豪言壮志，文化课要考个好成绩出来，却总是一次又一次的让人失望。我怀疑自己，早已没有自信的资本的我准备开始堕落了。<br>我还没尝过胜利的滋味啊。<br>“我他妈的再也受不了了。”  </p><a id="more"></a><p>第一次听到咸鱼这首歌，是在小学三年级的时候吧。<br>我那时没什么梦想的概念，也从没想过哪一天自己会堕落成现在这个样子。我只是很喜欢这首歌的旋律罢了。<br>我喜欢那时候的生活，我怀念那时候软软的阳光。<br>我想那时候的我肯定很天真，天真得可爱。</p><blockquote><h2 id="咸鱼-词-曲-五月天-阿信"><a href="#咸鱼-词-曲-五月天-阿信" class="headerlink" title="咸鱼 词/曲 五月天-阿信"></a>咸鱼 <p><font size="3">词/曲 五月天-阿信</font></p></h2><video height="40" width="500" controls autoplay name="media"><source src="http://music.163.com/song/media/outer/url?id=386040.mp3" type="audio/mpeg"></video></blockquote><p>今年是 2018 年，而我已经初二了。<br>我第二次听到了这首歌，是在我们班的 MV 中。<br>我一开始只是觉得做 MV 的同学品味和我蛮搭的，可是听着听着我哭了出来。<br>四年过去了，我发觉自己早已不是小时候期盼的样子。<br>我似乎什么都做不成。<br>我傻傻地看着 MV 里放着别人的荣誉，忽然有点无地自容。  </p><p>我还记得去年的这个时候，我还信誓旦旦地说今年要拿个 NOIP 一等奖来。<br>我还记得去年的这个时候，我还美好地幻想着今年的成绩会十分可喜。  </p><p>“我他妈真不是个东西。”我想着。  </p><p>我重新喜欢上了这首歌，但这次不是因为它的旋律。  </p><blockquote><p>我 如果有梦 有没有错<br>错过才会更加明白<br>明白坚持是什么</p></blockquote><p>我被它打动了，我总觉得我的处境似乎和这咸鱼一样。<br>只不过，等我意识到自己是只咸鱼的时候已经太晚了。<br>我静下心来仔细思考，我究竟得到和失去了什么。  </p><p>我不知道现在的自己是否真的醒悟了。<br>但我不想再给自己哭泣的机会。<br>毕竟我是一个天生乐观的男孩，<br>不能辜负了我这张喜感的脸。  </p><p>我不再想着否认自己是只咸鱼的事实，<br>承认又不丢人。  </p><p>我经历失败太多了，但庆幸的是我还没沦落到自暴自弃的地步。<br>至少，我还有救。<br>那么，我还来得及翻身。  </p><p>哪里要管这么多事情，<br>我他妈的又不是智力残缺，<br>我他妈的才不信所谓命运。</p><hr><blockquote><p>另：<br>预祝咸鱼的我<br>2019年快乐</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;期中考试结束了。我的成绩并不算拔尖，但我看到兴奋得哭了出来。&lt;br&gt;这不是我今年第一次哭了。&lt;br&gt;我总感觉自己受的委屈太多了。我是一名信息竞赛选手，却连 NOIP 的初赛都没考进过。我那么多次豪言壮志，文化课要考个好成绩出来，却总是一次又一次的让人失望。我怀疑自己，早已没有自信的资本的我准备开始堕落了。&lt;br&gt;我还没尝过胜利的滋味啊。&lt;br&gt;“我他妈的再也受不了了。”  &lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://markjuruo.ooo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="旧事记" scheme="https://markjuruo.ooo/tags/%E6%97%A7%E4%BA%8B%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>秋 小记 10.28-11.2</title>
    <link href="https://markjuruo.ooo/2018/11/02/qiu-xiao-ji-10-28-11-2/"/>
    <id>https://markjuruo.ooo/2018/11/02/qiu-xiao-ji-10-28-11-2/</id>
    <published>2018-11-02T11:37:00.000Z</published>
    <updated>2018-11-25T01:42:52.200Z</updated>
    
    <content type="html"><![CDATA[<p>以前我不是很喜欢秋天——<br>谁让它总是略显单调。<br>春天的万物复苏，<br>夏天的生机勃勃，<br>冬天的宁静优雅，<br>总是让人难以忘却。<br>但是可怜的秋天，我却总是想不出什么优秀的词来形容它的美。<br>似乎它有的，仅仅是凄凉的冷风和枯败的落叶。  </p><a id="more"></a><p>今年的我仍然是保守意见。<br>但我不得不说，秋似乎在我眼里变得可爱了几许。  </p><p>秋天的阳光的含蓄的，<br>像是又抱琵琶半遮面的小姑娘，羞涩，却又给人以温暖。<br>大片大片的常青木在阳光的映照下显得慵懒，却又十分可爱。  </p><p>若是穿过院子后的小桥，便会一眼瞪住河潭边堆的高高的河泥。<br>那是去年冬天挖上来的，今年便长出了一片片野草和芦苇，<br>秋风中摇曳着，仍不败落。</p><p>河水倒映着停在岸边的废弃小船，<br>若是在薄暮时分，会时不时透出一点点温柔的光，穿过树枝，斑斑点点的洒在地上，<br>把空中飘散的粉尘照的一闪一闪的。<br>太阳到了秋天，似乎也变得吝啬了，<br>不像春天时那么洋溢，不同夏天时那么热情。<br>只是一点点，一点点地洒在了河道旁，小路边。  </p><p>秋天的云朵是害羞的。它们似乎成了珍惜物。<br>很少很少的，在天边露出一点小角，成不了气候，却令人遐想连篇。<br>我不喜欢没有没有雨的季节，<br>但是那可爱的云彩暗恋般的躲躲闪闪让我不禁为之动容。  </p><p>我不喜欢秋天，它干燥而又凄凉。<br>我不喜欢秋天，它总是遮遮掩掩地展现自己的妖娆。<br>我不喜欢秋天，但是每年我都在盼着它。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前我不是很喜欢秋天——&lt;br&gt;谁让它总是略显单调。&lt;br&gt;春天的万物复苏，&lt;br&gt;夏天的生机勃勃，&lt;br&gt;冬天的宁静优雅，&lt;br&gt;总是让人难以忘却。&lt;br&gt;但是可怜的秋天，我却总是想不出什么优秀的词来形容它的美。&lt;br&gt;似乎它有的，仅仅是凄凉的冷风和枯败的落叶。  &lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://markjuruo.ooo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="小记" scheme="https://markjuruo.ooo/tags/%E5%B0%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-Theme-Yilia使用记录</title>
    <link href="https://markjuruo.ooo/2018/10/26/hexo-theme-yilia-shi-yong-ji-lu/"/>
    <id>https://markjuruo.ooo/2018/10/26/hexo-theme-yilia-shi-yong-ji-lu/</id>
    <published>2018-10-26T12:10:00.000Z</published>
    <updated>2018-11-25T01:43:14.114Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo-Yilia 是一个优秀的 Hexo 主题，由 <a href="https://litten.me" target="_blank" rel="noopener">@Litten</a> 开发,受到了广大 Hexo 使用者的欢迎。<br>说它优秀有以下几个原因：  </p><ul><li style="list-style: none"><input type="checkbox" checked> 优秀的加载速度</li><li style="list-style: none"><input type="checkbox" checked> 优秀的双栏设计</li><li style="list-style: none"><input type="checkbox" checked> 优秀的智能菜单</li><li style="list-style: none"><input type="checkbox" checked> 优秀的简约画面   </li></ul><p>这样一款简约优雅的主题，能让人更加专注于文章内容。<br>所以事实上本人是不大建议魔改的，但是有一些小小的细节可以根据个人喜好进行调整。<br>当然，如果您要使用这款主题，您就必须明确您是以文章为中心<br>而不是以背景和格式为中心的。</p><a id="more"></a><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>redbag’s blog (<a href="http://redbag.pw/" target="_blank" rel="noopener">http://redbag.pw/</a>) &gt;&gt;</p><p><img src="https://i.loli.net/2018/10/31/5bd9cb5a115fa.jpg" alt="redbag&#39;s blog">  </p><hr><p>jarworker’s blog (<a href="http://www.jarworker.cn/" target="_blank" rel="noopener">http://www.jarworker.cn/</a>) &gt;&gt; </p><p><img src="https://i.loli.net/2018/10/31/5bd9cb5ac517e.jpg" alt="jarworker&#39;s blog"></p><hr><p>markjuruo’s blog (<a href="https://markjuruo.ooo/">https://markjuruo.ooo/</a>) &gt;&gt;</p><p><img src="https://i.loli.net/2018/10/31/5bd9cb5ac6ca8.jpg" alt="markjuruo&#39;s blog"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>请在命令行中打开博客根目录，然后输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure></p><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><p>Yilia 是一个优秀的双栏结构的主题，于是我们可以先来研究其左栏（ Left-Col ）。<br>让我们来了解一下 Yilia 主题 Left-Col 中有哪些可显示并且方便个人修改的组件：  </p><ul><li style="list-style: none"><input type="checkbox" checked> 作者名称，Author</li><li style="list-style: none"><input type="checkbox" checked> 签名，Subtitle</li><li style="list-style: none"><input type="checkbox" checked> 头像，Avatar</li><li style="list-style: none"><input type="checkbox" checked> 菜单，Menu（所有文章/友链/关于我）</li><li style="list-style: none"><input type="checkbox" checked> 智能菜单，SmartMenu</li><li style="list-style: none"><input type="checkbox" checked> 联系方式，CallMe（Github/Rss/Mail/…）</li><li style="list-style: none"><input type="checkbox" checked> 头像后部背景，Header</li></ul><p>极大的定制范畴使得同一款主题可以衍生出很多不同的风格。   </p><h3 id="Yilia-的主题格式"><a href="#Yilia-的主题格式" class="headerlink" title="Yilia 的主题格式"></a>Yilia 的主题格式</h3><p>（求求您耐心的读完这一段，千万不要吓跑）<br>文件树：（ Yilia 文件夹下）<br>其中，在文件夹后打<code>*</code>号的表示在使用过程中不会进行大量修改或是根本不用/不建议修改。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">├─languages *</span><br><span class="line">├─layout</span><br><span class="line">│  └─_partial</span><br><span class="line">│      └─post</span><br><span class="line">├─<span class="built_in">source</span></span><br><span class="line">│  ├─fonts *</span><br><span class="line">│  └─img</span><br><span class="line">└─<span class="built_in">source</span>-src *</span><br><span class="line">    ├─css</span><br><span class="line">    │  ├─core</span><br><span class="line">    │  ├─fonts</span><br><span class="line">    │  └─img</span><br><span class="line">    └─js</span><br></pre></td></tr></table></figure></p><p>其中，大量的渲染文件放在 <code>layout</code> 目录下。当然，大部分的 Hexo-Theme 渲染文件也是放在 <code>layout</code> 下的。<br>Yilia有着层次分明的渲染结构，十分适合二次编写。但本文主要是基于原有风格进行细节调整。<br>您会发现在 <code>source</code> 目录下有一个 <code>img</code> 文件夹，这里面可以存放和博客效果相关的图片，在 <code>_config.yml</code> 文件中就可以以 <code>/img/你的图片名称</code> 来使用图片了，我们一般称 <code>/img/...</code> ， <code>/post/...</code> 这样的地址为相对地址，不同于 <code>C:/bulabula/.../img/...</code> 这样的完整地址，在同一个大目录下，相对地址的使用可以省略该大目录的地址信息。即 <code>C:/mark/</code> 下，想要使用 <code>C:/mark/img/1.jpg</code> 就可以写成 <code>/img/1.jpg</code> 。</p><h3 id="config-yml-文件配置"><a href="#config-yml-文件配置" class="headerlink" title="_config.yml 文件配置"></a><code>_config.yml</code> 文件配置</h3><p>每款 Hexo 主题都有它的 <code>_config.yml</code> 文件，里面放有可以直接修改的个性化设置。<br>于是，让我们从这说起吧</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Header</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">随笔:</span> <span class="string">/tags/随笔/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SubNav</span></span><br><span class="line"><span class="attr">subnav:</span></span><br><span class="line"><span class="attr">  github:</span> <span class="string">"#"</span></span><br><span class="line"><span class="attr">  weibo:</span> <span class="string">"#"</span></span><br><span class="line"><span class="attr">  rss:</span> <span class="string">"#"</span></span><br><span class="line"><span class="attr">  zhihu:</span> <span class="string">"#"</span></span><br><span class="line">  <span class="comment">#qq: "#"</span></span><br><span class="line">  <span class="comment">#weixin: "#"</span></span><br><span class="line">  <span class="comment">#jianshu: "#"</span></span><br><span class="line">  <span class="comment">#douban: "#"</span></span><br><span class="line">  <span class="comment">#segmentfault: "#"</span></span><br><span class="line">  <span class="comment">#bilibili: "#"</span></span><br><span class="line">  <span class="comment">#acfun: "#"</span></span><br><span class="line">  <span class="comment">#mail: "mailto:litten225@qq.com"</span></span><br><span class="line">  <span class="comment">#facebook: "#"</span></span><br><span class="line">  <span class="comment">#google: "#"</span></span><br><span class="line">  <span class="comment">#twitter: "#"</span></span><br><span class="line">  <span class="comment">#linkedin: "#"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否需要修改 root 路径</span></span><br><span class="line"><span class="comment"># 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，</span></span><br><span class="line"><span class="comment"># 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Content</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章太长，截断按钮文字</span></span><br><span class="line"><span class="attr">excerpt_link:</span> <span class="string">more</span></span><br><span class="line"><span class="comment"># 文章卡片右下角常驻链接，不需要请设置为false</span></span><br><span class="line"><span class="attr">show_all_link:</span> <span class="string">'展开全文'</span></span><br><span class="line"><span class="comment"># 数学公式</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 是否在新窗口打开链接</span></span><br><span class="line"><span class="attr">open_in_new:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打赏</span></span><br><span class="line"><span class="comment"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class="line"><span class="attr">reward_type:</span> <span class="number">2</span></span><br><span class="line"><span class="comment"># 打赏wording</span></span><br><span class="line"><span class="attr">reward_wording:</span> <span class="string">'谢谢你请我吃糖果'</span></span><br><span class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></span><br><span class="line"><span class="attr">alipay:</span> </span><br><span class="line"><span class="comment"># 微信二维码图片地址</span></span><br><span class="line"><span class="attr">weixin:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录</span></span><br><span class="line"><span class="comment"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span></span><br><span class="line"><span class="attr">toc:</span> <span class="number">1</span></span><br><span class="line"><span class="comment"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span></span><br><span class="line"><span class="attr">toc_hide_index:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 目录为空时的提示</span></span><br><span class="line"><span class="attr">toc_empty_wording:</span> <span class="string">'目录，不存在的…'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否有快速回到顶部的按钮</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Miscellaneous</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#你的头像url</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否开启分享</span></span><br><span class="line"><span class="attr">share_jia:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment</span></span><br><span class="line"><span class="comment">#不需要使用某项，直接设置值为false，或注释掉</span></span><br><span class="line"><span class="comment">#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1、多说</span></span><br><span class="line"><span class="attr">duoshuo:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2、网易云跟帖</span></span><br><span class="line"><span class="attr">wangyiyun:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3、畅言</span></span><br><span class="line"><span class="attr">changyan_appid:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">changyan_conf:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的</span></span><br><span class="line"><span class="attr">disqus:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5、Gitment</span></span><br><span class="line"><span class="attr">gitment_owner:</span> <span class="literal">false</span>      <span class="comment">#你的 GitHub ID</span></span><br><span class="line"><span class="attr">gitment_repo:</span> <span class="string">''</span>          <span class="comment">#存储评论的 repo</span></span><br><span class="line"><span class="attr">gitment_oauth:</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">''</span>           <span class="comment">#client ID</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="string">''</span>       <span class="comment">#client secret</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span></span><br><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="comment"># 头像上面的背景颜色</span></span><br><span class="line"><span class="attr">  header:</span> <span class="string">'#4d4d4d'</span></span><br><span class="line">  <span class="comment"># 右滑板块背景</span></span><br><span class="line"><span class="attr">  slider:</span> <span class="string">'linear-gradient(200deg,#a0cfe4,#e8c37e)'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># slider的设置</span></span><br><span class="line"><span class="attr">slider:</span></span><br><span class="line">  <span class="comment"># 是否默认展开tags板块</span></span><br><span class="line"><span class="attr">  showTags:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 智能菜单</span></span><br><span class="line"><span class="comment"># 如不需要，将该对应项置为false</span></span><br><span class="line"><span class="comment"># 比如</span></span><br><span class="line"><span class="comment">#smart_menu:</span></span><br><span class="line"><span class="comment">#  friends: false</span></span><br><span class="line"><span class="attr">smart_menu:</span></span><br><span class="line"><span class="attr">  innerArchive:</span> <span class="string">'所有文章'</span></span><br><span class="line"><span class="attr">  friends:</span> <span class="string">'友链'</span></span><br><span class="line"><span class="attr">  aboutme:</span> <span class="string">'关于我'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">friends:</span></span><br><span class="line">  <span class="string">友情链接1:</span> <span class="attr">http://localhost:4000/</span></span><br><span class="line">  <span class="string">友情链接2:</span> <span class="attr">http://localhost:4000/</span></span><br><span class="line">  <span class="string">友情链接3:</span> <span class="attr">http://localhost:4000/</span></span><br><span class="line">  <span class="string">友情链接4:</span> <span class="attr">http://localhost:4000/</span></span><br><span class="line">  <span class="string">友情链接5:</span> <span class="attr">http://localhost:4000/</span></span><br><span class="line">  <span class="string">友情链接6:</span> <span class="attr">http://localhost:4000/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">aboutme:</span> <span class="string">很惭愧&lt;br&gt;&lt;br&gt;只做了一点微小的工作&lt;br&gt;谢谢大家</span></span><br></pre></td></tr></table></figure><p>以上是 Yilia 主题的 <code>_config.yml</code> 文件的全部内容。作者 <a href="https://litten.me" target="_blank" rel="noopener">@Litten</a> 已经对其中内容进行了十分详细的解释，应当说是十分易懂的，因此一下将对其中一些细节进行再讲解。  </p><h3 id="左侧菜单"><a href="#左侧菜单" class="headerlink" title="左侧菜单"></a>左侧菜单</h3><p>这里的添加内容将会显示在左侧栏中，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">随笔:</span> <span class="string">/tags/随笔/</span></span><br></pre></td></tr></table></figure><p>如图：</p><p><img src="https://i.loli.net/2018/11/01/5bdb15b464fa8.jpg" alt="菜单栏"></p><p>这其中的内容可以随意添加，例如：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">随笔:</span> <span class="string">/tags/随笔/</span></span><br><span class="line">  <span class="string">记录:</span> <span class="string">/record</span></span><br><span class="line">  <span class="string">专题:</span> <span class="string">/special</span></span><br></pre></td></tr></table></figure></p><p>当然，这样做的前提是您必须先建立该页面。像这样：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page record</span><br><span class="line">hexo new page special</span><br></pre></td></tr></table></figure></p><h3 id="左侧联系方式"><a href="#左侧联系方式" class="headerlink" title="左侧联系方式"></a>左侧联系方式</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SubNav</span></span><br><span class="line"><span class="attr">subnav:</span></span><br><span class="line"><span class="attr">  github:</span> <span class="string">"#"</span></span><br><span class="line"><span class="attr">  weibo:</span> <span class="string">"#"</span></span><br><span class="line"><span class="attr">  rss:</span> <span class="string">"#"</span></span><br><span class="line"><span class="attr">  zhihu:</span> <span class="string">"#"</span></span><br><span class="line">  <span class="comment">#qq: "#"</span></span><br><span class="line">  <span class="comment">#weixin: "#"</span></span><br><span class="line">  <span class="comment">#jianshu: "#"</span></span><br><span class="line">  <span class="comment">#douban: "#"</span></span><br><span class="line">  <span class="comment">#segmentfault: "#"</span></span><br><span class="line">  <span class="comment">#bilibili: "#"</span></span><br><span class="line">  <span class="comment">#acfun: "#"</span></span><br><span class="line">  <span class="comment">#mail: "mailto:example@example.com"</span></span><br><span class="line">  <span class="comment">#facebook: "#"</span></span><br><span class="line">  <span class="comment">#google: "#"</span></span><br><span class="line">  <span class="comment">#twitter: "#"</span></span><br><span class="line">  <span class="comment">#linkedin: "#"</span></span><br></pre></td></tr></table></figure><p>左侧菜单栏的下方可以添加联系方式。<br>如果前面加了<code>#</code>，就代表注释掉了，将不会显示。<br>否则，请在后面写上您相对应的联系方式的网站地址。<br>比如：如果您只需要显示 GitHub 上的联系方式，并且您的 GitHub 个人主界面网址是 <a href="https://github.com/xiaoming" target="_blank" rel="noopener">https://github.com/xiaoming</a> ，那么您可以这样修改：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">subnav:</span></span><br><span class="line"><span class="attr">  github:</span> <span class="string">"https://github.com/xiaoming"</span></span><br><span class="line">  <span class="comment">#weibo: "#"</span></span><br><span class="line">  <span class="comment">#rss: "#"</span></span><br><span class="line">  <span class="comment">#zhihu: "#"</span></span><br><span class="line">  <span class="comment">#qq: "#"</span></span><br><span class="line">  <span class="comment">#weixin: "#"</span></span><br><span class="line">  <span class="comment">#jianshu: "#"</span></span><br><span class="line">  <span class="comment">#douban: "#"</span></span><br><span class="line">  <span class="comment">#segmentfault: "#"</span></span><br><span class="line">  <span class="comment">#bilibili: "#"</span></span><br><span class="line">  <span class="comment">#acfun: "#"</span></span><br><span class="line">  <span class="comment">#mail: "#"</span></span><br><span class="line">  <span class="comment">#facebook: "#"</span></span><br><span class="line">  <span class="comment">#google: "#"</span></span><br><span class="line">  <span class="comment">#twitter: "#"</span></span><br><span class="line">  <span class="comment">#linkedin: "#"</span></span><br></pre></td></tr></table></figure></p><p>您会注意到，联系方式中有一项 <code>mail</code> 。这里面可以填您的邮箱，填写格式为 <code>mailto:YourMail</code> ，必须保证 <code>YourMail</code> 的填写格式正确（即必须为 <code>***@***.com</code> 的格式）。当读者点击 <code>mail</code> 联系方式时，浏览器就会自动寻找并打开电脑上的邮件系统，收件人上会自动填上 <code>YourMail</code> 。</p><h3 id="首页文章显示效果"><a href="#首页文章显示效果" class="headerlink" title="首页文章显示效果"></a>首页文章显示效果</h3><p>当您希望在首页，每篇文章只显示于预览时，可以使用到下面的配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章太长，截断按钮文字</span></span><br><span class="line"><span class="attr">excerpt_link:</span> <span class="string">more</span></span><br><span class="line"><span class="comment"># 文章卡片右下角常驻链接，不需要请设置为false</span></span><br><span class="line"><span class="attr">show_all_link:</span> <span class="string">'展开全文'</span></span><br><span class="line"><span class="comment"># 数学公式</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 是否在新窗口打开链接</span></span><br><span class="line"><span class="attr">open_in_new:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>一般的， <code>excerpt_link: more</code> 我们不进行改动。当您的文章太长时，您可以在预览部分的后面添加 <code>&lt;!--more--&gt;</code> ，这样，在首页，文章便只会显示 <code>&lt;!--more--&gt;</code> 之前的内容。</p><p><code>show_all_link</code> 即为首页每个文章右下角的展开全文的按钮，您可以按照个人喜好改变其中的内容，如改成： <code>show_all_link: &#39;瞅一瞅&#39;</code>  </p><p><code>mathjax</code> ，强大的数学公式渲染器。如果您经常需要用到数学公式的，请将这一段改为 <code>mathjax: true</code> 。具体的 mathjax 教程详见：<a href="https://www.cnblogs.com/linxd/p/4955530.html" target="_blank" rel="noopener">https://www.cnblogs.com/linxd/p/4955530.html</a></p><h3 id="文章打赏功能"><a href="#文章打赏功能" class="headerlink" title="文章打赏功能"></a>文章打赏功能</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打赏</span></span><br><span class="line"><span class="comment"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class="line"><span class="attr">reward_type:</span> <span class="number">2</span></span><br><span class="line"><span class="comment"># 打赏wording</span></span><br><span class="line"><span class="attr">reward_wording:</span> <span class="string">'谢谢你请我吃糖果'</span></span><br><span class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></span><br><span class="line"><span class="attr">alipay:</span> </span><br><span class="line"><span class="comment"># 微信二维码图片地址</span></span><br><span class="line"><span class="attr">weixin:</span></span><br></pre></td></tr></table></figure><p>这里配置文章打赏功能。<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">alipay:</span> </span><br><span class="line"><span class="attr">weixin:</span></span><br></pre></td></tr></table></figure></p><p>这两项的填写，可以先把你支付宝或微信的收款二维码图片放到主题根目录下的 <code>/source/img</code> 文件夹中，然后再在其后填写 <code>/img/您保存的图片名称</code> 。</p><h3 id="文章目录设置"><a href="#文章目录设置" class="headerlink" title="文章目录设置"></a>文章目录设置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目录</span></span><br><span class="line"><span class="comment"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span></span><br><span class="line"><span class="attr">toc:</span> <span class="number">1</span></span><br><span class="line"><span class="comment"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span></span><br><span class="line"><span class="attr">toc_hide_index:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 目录为空时的提示</span></span><br><span class="line"><span class="attr">toc_empty_wording:</span> <span class="string">'目录，不存在的…'</span></span><br></pre></td></tr></table></figure><p>Hexo 中的目录是根据您在 markdown 中书写的以 <code>#</code> 开头的标题来生成的。并且会根据 <code>#</code> 的个数来确定级数。<br>比如：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># title</span></span><br><span class="line"><span class="section">## title</span></span><br><span class="line"><span class="section">## title</span></span><br><span class="line"><span class="section"># title</span></span><br></pre></td></tr></table></figure></p><p>那么它就会生成为：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="string">title</span></span><br><span class="line"><span class="number">1.1</span><span class="string">.</span> <span class="string">title</span></span><br><span class="line"><span class="number">1.2</span><span class="string">.</span> <span class="string">title</span></span><br><span class="line"><span class="number">2.</span> <span class="string">title</span></span><br></pre></td></tr></table></figure></p><p>应当注意的是：如果 <code>toc_hide_index</code> 后的内容为 <code>true</code> ，那么生成的目录将会在每一级前面都加上序号，如：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="string">title</span></span><br><span class="line"><span class="number">1.1</span><span class="string">.</span> <span class="string">title</span></span><br><span class="line"><span class="number">1.2</span><span class="number">.1</span><span class="string">.title</span></span><br><span class="line"><span class="number">1.2</span><span class="number">.2</span><span class="string">.</span> <span class="string">title</span></span><br><span class="line"><span class="number">2.</span> <span class="string">title</span></span><br></pre></td></tr></table></figure></p><h3 id="其他个性设置-头像-Top-键-分享-图标"><a href="#其他个性设置-头像-Top-键-分享-图标" class="headerlink" title="其他个性设置(头像/ Top 键/分享/图标)"></a>其他个性设置(头像/ Top 键/分享/图标)</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否有快速回到顶部的按钮</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#你的头像url</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否开启分享</span></span><br><span class="line"><span class="attr">share_jia:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>应当注意的是， <code>avatar</code> 和 <code>favicon</code> 两项，都可以先把您需要的图片放到主题根目录下的 <code>/source/img</code> 文件夹中，然后再在其后填写 <code>/img/您保存的图片名称</code> 。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo-Yilia 是一个优秀的 Hexo 主题，由 &lt;a href=&quot;https://litten.me&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;@Litten&lt;/a&gt; 开发,受到了广大 Hexo 使用者的欢迎。&lt;br&gt;说它优秀有以下几个原因：  &lt;/p&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 优秀的加载速度&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 优秀的双栏设计&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 优秀的智能菜单&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 优秀的简约画面   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样一款简约优雅的主题，能让人更加专注于文章内容。&lt;br&gt;所以事实上本人是不大建议魔改的，但是有一些小小的细节可以根据个人喜好进行调整。&lt;br&gt;当然，如果您要使用这款主题，您就必须明确您是以文章为中心&lt;br&gt;而不是以背景和格式为中心的。&lt;/p&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://markjuruo.ooo/categories/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="Hexo" scheme="https://markjuruo.ooo/categories/%E6%9D%82%E8%AE%B0/Hexo/"/>
    
    
      <category term="Hexo-Theme" scheme="https://markjuruo.ooo/tags/Hexo-Theme/"/>
    
  </entry>
  
  <entry>
    <title>[体育课日志] 妈耶3000米 10.16-10.22</title>
    <link href="https://markjuruo.ooo/2018/10/24/ti-yu-ke-ri-zhi-ma-ye-3000-mi/"/>
    <id>https://markjuruo.ooo/2018/10/24/ti-yu-ke-ri-zhi-ma-ye-3000-mi/</id>
    <published>2018-10-24T15:43:00.000Z</published>
    <updated>2018-11-04T11:17:47.002Z</updated>
    
    <content type="html"><![CDATA[<p>今年升入初二的我们，最初还沾沾自喜着，在这学校里的辈分总算不是垫底了。可惜好日子不长，我们在小初一的面前光彩了几天，舒服日子没过够就开始发虚了。<br>体育组的老师带来了扫兴的消息。似乎是区里即将对全体初二同学的体育锻炼质量进行抽测调查。因为老师们不知道究竟会抽到哪个班，于是之后对全体初二同学实施统一策略。<br>好日子彻底结束了，每天大课间跑步从750米加到1000米，可是给的还是750米的时间。<br>更让人全身发虚的是体育课。<br>帅气的老唐得知了这个消息，高兴坏了：<br>总算找到个理由折磨折磨我们了。<br>这之后的第一节体育课，我们照常很懒散地集队。<br>可我忽然发现唐老师的神色似乎不是很友好啊。<br><a id="more"></a></p><p>准备运动结束了，唐老师便开始做重要讲话。<br>“今天我们就锻炼一下手臂肌肉，”唐老师笑的狰狞。“当然，如果你们想的话，也可以兼并腿部肌肉。”<br>我们并未有所警惕，只是侧着身子听着。<br>“全体趴下！”他突然吼道，“腰部不要弓起来，放平！手撑地，手掌与肩膀在同一直线上。”<br>“俯卧撑20个，我吹哨，你们做一个。”<br>“嘘————”<br>“嘘————”<br>（吹哨声）<br>唐老师把每个哨音都拖得很长，我们只得不停的变化体位来转移疼痛。重心向前手疼，重心向后脚疼，让人十分为难。<br>“嘘————！”<br>最后一声哨吹干净了，我急着想要起身，结果老师又喊道“来，保持这个姿势，我们坚持1分30秒！”<br>我把头低下了，我开始尝试各种作弊方式，来减轻疼痛。我旁边的同学也无可奈何，彻底忽视了老师“不准偷懒”的真香警告。  </p><p>那天我们连做了4组。做完之后我们都神清气爽，我们领悟了这个训练的真谛事实上是锻炼我们的反应能力，如何在偷懒被老师发现前及时转换回来。<br>当我们以为这便是训练极限时，老唐的皎洁再一次令我们为之感慨。  </p><p>第二天的体育课。<br>我们似乎是开始适应了这样的强度，有同学甚至在做俯卧撑的时候聊起了天。当然察觉到这个情况的不只有我，还有帅气的唐老师。<br>“呦，进步得很快啊，有力气讲话呀？”<br>我们便觉大事不妙，然后纷纷指责那些说话的同学。<br>迟了。太迟了。被抓到了的把柄像泼出去的水一样收不回来。<br>“有力气的话，我们多锻炼锻炼。”老唐静静地看着我们，“这样吧，接下来再做三组俯卧撑加1分30秒的平板支撑，然后每组之间间插一个1000米，可以吧？”<br>没等我们开始抱怨，唐老师就吼道。<br>“全部去起跑线站好！”<br>那天，我们总共跑了3000米，80个俯卧撑，6分钟平板支撑。</p><p>就当我们以为这苦难差不多也就这样的时候，老唐再一次的刷新了难度，<br>当然后果就是我们的反应力急剧增加，<br>在老师发现我们偷懒前就能迅速摆好姿势。  </p><p>这天的体育课我们都乖了很多，因为3000米真的跑不起，上次跑完之后走路都感觉腿在飘，我们算是跑怕了。<br>老唐见我们这么认真，十分高兴，说打算给我们减个几组。<br>“唐老师最帅！”“唐老师万岁！”“唐老师我爱你！”<br>于是一片欢呼声起，使老唐有点尴尬。<br>第二组俯卧撑时，我们开始照常偷懒，直勾勾地望着老唐，时刻准备摆好姿势，没什么在聊天，我们都觉得我们十分安全。<br>可是似乎有个反射弧比较长的同学没及时察觉到唐老师的目光正注视着他那靠在地上休息的腿。<br>“呦，”老唐说，“糊弄我？”<br>“我本来好心好意想给你们减个几组的，可惜喽”<br>“所有人，到台阶那边坐下！”<br>我们的心开始发凉，我感到一阵不安遍袭全身。<br>“脚放平，向前伸！手撑住后面的台阶，然后身子抬起来！”<br>“我吹一哨，你们就往下弯曲一次手肘，听到了吗？”<br>我们顿时发觉这个项目的难度，<br>全身的重力全部压在手上，不出三秒手臂就像是划了口子一样剧痛。<br>更可怕的是没有任何比较隐蔽的偷懒方式。<br>身体比脸皮重要，这是我们半个学期提炼出来的教训。<br>于是我们开始了一场与老唐的反应力比赛。。。  </p><p>最终肯定是我们赢了这场“反应力比赛”，但我总有些感觉，老唐似乎是故意输的。<br>他似乎是相信我们都是在拼尽全力的，<br>是身体实在受不了才偷懒的。<br>我突然对老唐起了感激之心。  </p><p>但是即便是偷着懒做完那一组，手臂还是跟打了全麻一样的难受。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今年升入初二的我们，最初还沾沾自喜着，在这学校里的辈分总算不是垫底了。可惜好日子不长，我们在小初一的面前光彩了几天，舒服日子没过够就开始发虚了。&lt;br&gt;体育组的老师带来了扫兴的消息。似乎是区里即将对全体初二同学的体育锻炼质量进行抽测调查。因为老师们不知道究竟会抽到哪个班，于是之后对全体初二同学实施统一策略。&lt;br&gt;好日子彻底结束了，每天大课间跑步从750米加到1000米，可是给的还是750米的时间。&lt;br&gt;更让人全身发虚的是体育课。&lt;br&gt;帅气的老唐得知了这个消息，高兴坏了：&lt;br&gt;总算找到个理由折磨折磨我们了。&lt;br&gt;这之后的第一节体育课，我们照常很懒散地集队。&lt;br&gt;可我忽然发现唐老师的神色似乎不是很友好啊。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://markjuruo.ooo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日志" scheme="https://markjuruo.ooo/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>[S-Contest] 20181023-T1-排队出发(贪心/排序)</title>
    <link href="https://markjuruo.ooo/2018/10/24/s-contest20181023-t1-pai-dui-chu-fa/"/>
    <id>https://markjuruo.ooo/2018/10/24/s-contest20181023-t1-pai-dui-chu-fa/</id>
    <published>2018-10-24T14:55:00.000Z</published>
    <updated>2018-11-03T14:22:35.343Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>神牛岛是传说中的一个岛屿，凡是成功到那里游历，完成探险并返回的人，都会成为神牛。但是，现实中却没有人知道如何到达神牛岛。<br>这天夜里，笃志者睡着之后，不久就进入了梦乡。他突然看到有人在问，“有人想去神牛岛的吗？”神牛岛之旅的牌子前，就开始有不少勇士报名要去冒险探索。<br>“我们会把勇士安排在前，带领大家一起去神牛岛。下面开始点名！”管理队伍的LXY神牛说。其实说实话，给学生排队这种工作是最让神牛头疼的了。因为同学们都有自尊心，都不愿意排后面。共有n个同学要排成一列，每个同学有两个属性：影响力和承受能力。给一个同学造成的心理创伤指数等于所有在他前面同学的影响力之和减去他的承受能力。现在请你帮忙安排一下点名顺序，尽量使受到心理创伤最大的同学少受创伤。<br><a id="more"></a></p><h2 id="输入-amp-输出细则"><a href="#输入-amp-输出细则" class="headerlink" title="输入&amp;输出细则"></a>输入&amp;输出细则</h2><p>【输入】 输入文件1.in包含n+1行：<br>第1行是整数n，表示同学的个数。<br>第2~n+1行每行两个自然数，分别是该同学的影响力和承受能力。</p><p>【输出】 输出文件1.out包含1行，为你安排的顺序中受到心理创伤最大的同学受到的创伤。</p><p>输入输出样例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">INPUT:</span><br><span class="line">3  </span><br><span class="line">10 3  </span><br><span class="line">2 5  </span><br><span class="line">3 3  </span><br><span class="line">OUTPUT:</span><br><span class="line">2</span><br></pre></td></tr></table></figure></p><p>【数据规模】对于100％的数据，1&lt;=n&lt;=50000，1&lt;=影响力&lt;=10000，1&lt;=承受能力&lt;=1,000,000,000。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>没错这就是一道简单的贪心。而且理解起来并不麻烦。我们规定$a_i$表示第i个人的影响力，$b_i$表示第i个人的承受能力。不难发现，这道题<del>我所知道</del>的最优思路就是先对这组数据进行排序，而排序的方式必定与$a_i$和$b_i$有着某种玄学联系。之后，对排序好的数据进行贪心运算即可。<br>题目的数据无法保证单调性，所以二分和二分答案是难以实现的。 –By <a href="https://york2005.blog.luogu.org/" target="_blank" rel="noopener">DPair</a><br>题目数据不保证无后效性，所以动规是难以实现的。<br>于是，我们可以得到这道题的基础模板：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">cin</span>&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)index[i]=<span class="number">1</span>;<span class="comment">//index表示元素在序列中排在第几位</span></span><br><span class="line">sort(index.index+n,cmp);</span><br><span class="line">ans=-INF;tmp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    ans=max(ans,tmp-b[index[i]]);</span><br><span class="line">    tmp+=a[index[i]];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>当然，以上这段用结构体来表示更容易理解。<br>那么我们只要来简单推一下cmp的内容即可。<br>由题目可得，对于相邻两个数i，j，他们的先后顺序对其后面的数不造成影响。  </p><blockquote><p>不论是i在前还是j在前，他们的影响度总和都是$a_i+b_i$</p></blockquote><p>由题意可得，影响力越大排名越靠后，承受能力越小排名越靠前。为了把这两个量统一考虑，我们单独考虑ij两人中排序后两人靠后的那个人心理创伤指数的大小，并以此作为排序因子。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[i]-b[j]&lt;a[j]-b[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>由此完成。源码不供。</p><h2 id="蹲坑记"><a href="#蹲坑记" class="headerlink" title="蹲坑记"></a>蹲坑记</h2><p>以上思路全部都是在看过我们同学<a href="https://york2005.blog.luogu.org/pai-dui-chu-fa-queuepasccpp-ti-xie" target="_blank" rel="noopener">@DPair</a>同学的题解后写出的，相当于复述。但是事实上一开始我的思路并不是如此。并且，在经过几位大佬的帮助下，我逐渐清晰了自己的思路。<br>我们规定$a_i$表示第i个人的影响力，$b_i$表示第i个人的承受能力，$Q_i$表示第i个人当前排序情况下的心理创伤指数。设$sum_i$为第1~i个人的影响力之和。勒令第i个人与第j个人相邻。  </p><ol><li>当i在j前时：<br>$Q_i = sum_{i-1} - b_i$<br>$Q_j = sum_{i-1} + a_i - b_j$</li><li>当j在i前时：<br>$Q_i = sum_{i-1} + a_j - b_i$<br>$Q_j = sum_{i-1} - b_j$  </li></ol><p>而我们现在需要的是其中的最大值，那么便是：<br>$max ( Q_i,Q_j )$其中包含以上罗列的$Q_i$和$Q_j$的两种不同情况<br>提取出$sum_{i-1}$可得到最大值即为：<br>$max( -b_i , a_i -b_j , -b_j , a_j-b_i )+sum_{i-1}$  </p><p>此时，我们假设i排在j前面<br>不难得到，此时两人中心理创伤指数最大值即为：<br>$max ( Q_i, Q_j ) $<br>$= max ( sum_{i-1}-b_i,sum_{i-1}+a_i-b_j ) $<br>$= max ( -b_i,a_i-b_j ) +sum_{i-1} $<br>我们不妨把max内的两数都加上$b_i+b_j$，然后在max外减去，不难得出<br>$max ( b_j,a_i+b_i )-b_i-b_j+sum_{i-1} $  </p><p>当$a_i+b_i&gt;a_j+b_j$时<br>得到$a_i+b_i&gt;b_j$,最大值为$a_i+b_i$<br>由于此时$a_i+b_i$是$a_i+b_i$,$a_j+b_j,b_i,b_j$中最大的，所以此时受到伤害最大<br>当$a_i+b_i&lt;a_j+b_j$时<br>最大值为$a_i+b_i或b_j$。<br>而这个值必然小于$a_j+b_j$。<br>所以我们让$a_i+b_i&lt;a_j+b_j$能比让$a_i+b_i&gt;a_j+b_j$得到更优的解。  </p><p>于是我们可以得出排序基准：<code>a[i]+[i]&lt;a[j]+b[j]</code><br>于是得到排序函数为：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[i]+b[i]&lt;a[j]+b[j];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>观察一下不难发现其实它和<code>a[i]-b[j]&lt;a[j]-b[i]</code>完全没有区别，但是它们的推导过程大相径庭。</p><p>感谢<a href="https://onglu.xyz/" target="_blank" rel="noopener">@Onglu</a>的帮助。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;神牛岛是传说中的一个岛屿，凡是成功到那里游历，完成探险并返回的人，都会成为神牛。但是，现实中却没有人知道如何到达神牛岛。&lt;br&gt;这天夜里，笃志者睡着之后，不久就进入了梦乡。他突然看到有人在问，“有人想去神牛岛的吗？”神牛岛之旅的牌子前，就开始有不少勇士报名要去冒险探索。&lt;br&gt;“我们会把勇士安排在前，带领大家一起去神牛岛。下面开始点名！”管理队伍的LXY神牛说。其实说实话，给学生排队这种工作是最让神牛头疼的了。因为同学们都有自尊心，都不愿意排后面。共有n个同学要排成一列，每个同学有两个属性：影响力和承受能力。给一个同学造成的心理创伤指数等于所有在他前面同学的影响力之和减去他的承受能力。现在请你帮忙安排一下点名顺序，尽量使受到心理创伤最大的同学少受创伤。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="https://markjuruo.ooo/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="排序" scheme="https://markjuruo.ooo/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="贪心" scheme="https://markjuruo.ooo/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="玄学" scheme="https://markjuruo.ooo/tags/%E7%8E%84%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Material化Windows桌面任务栏</title>
    <link href="https://markjuruo.ooo/2018/10/23/material-hua-windows-zhuo-mian-ce-bian-lan/"/>
    <id>https://markjuruo.ooo/2018/10/23/material-hua-windows-zhuo-mian-ce-bian-lan/</id>
    <published>2018-10-23T14:52:00.000Z</published>
    <updated>2018-10-30T14:43:43.838Z</updated>
    
    <content type="html"><![CDATA[<p>关于让Windows桌面任务栏透明化/毛玻璃化的方案。<br><a id="more"></a></p><blockquote><p>本文内容为转载，本文原作者：<a href="https://www.torther.club/" target="_blank" rel="noopener">@Torther</a><br>十分感谢<a href="https://www.torther.club/" target="_blank" rel="noopener">@Torther</a>提供的方案。  </p></blockquote><p></p><p>对于某些追求美感的人来说，让任务栏变透明一定是一个福音。</p><h2 id="directory022473698782708242">正文</h2><blockquote><p><strong>注：</strong>本篇教程共有两种方案，请按照自己使用习惯进行选择。<br><strong>且本篇教程仅支持 Windows 10 ，且两款软件均有官方汉化。</strong></p></blockquote><h3 id="directory022473698782708243">第一种方案</h3><p>&nbsp; &nbsp; <strong>TranslucentTB</strong> ，一个轻量级实用程序，使 Windows 任务栏半透明/透明。</p><h4 id="directory022473698782708244">效果图</h4><p><img src="https://camo.githubusercontent.com/b28b8be4b2a6e7427307ee0061150a7d13016b77/68747470733a2f2f66696c65732e636861726c65736d696c657474652e6e65742f47624f5834622e706e67" alt="效果图1" title="效果图1"><img src="https://camo.githubusercontent.com/9946ee82e363c1b16dffb947b9bb8251f85943a3/68747470733a2f2f66696c65732e636861726c65736d696c657474652e6e65742f7958333756632e706e67" alt="效果图2" title="效果图2"></p><h4 id="directory022473698782708245">特征</h4><ul><li><p>使用支持 Alpha 和实时预览的先进颜色选取器以更改任务栏的颜色。</p><ul><li><strong>可供选择的任务栏状态</strong></li><li><strong>模糊</strong>：会使任务栏变模糊，如效果图一。</li><li><strong>透明</strong>：让你的任务栏变得全透明，如效果图二。</li><li><strong>正常</strong>：仿佛没有运行 TranslucentTB 。</li><li><strong>不透明</strong>：没有透明度</li></ul></li><li><p><strong>动态模式（这些功能可以一起使用）</strong></p><ul><li><strong>动态 Windows</strong> ：如果窗口最大化，则会将任务栏更改为其他外观。</li><li><strong>动态开始菜单</strong>：打开开始菜单时将更改任务栏外观。</li><li><strong>动态 Cortana</strong>：当 Cortana 打开时，将更改任务栏外观。</li><li><strong>动态时间轴/任务视图</strong>：当时间轴（或旧版本上的任务视图）打开时，将更改任务栏外观。</li></ul></li><li><strong>能够显示或隐藏Aero Peek按钮。可随意定制。</strong></li></ul><p><img src="https://i.loli.net/2018/10/05/5bb6edd81fef2.gif" alt="效果图3" title="效果图3"></p><h4 id="directory022473698782708246">下载</h4><p>&nbsp; &nbsp; 你可以在 <a href="https://www.microsoft.com/store/apps/9PF4KZ2VN4W9" target="_blank">Microsoft Store</a> 免费下载该程序的 UWP 版本，并保持后台更新和设置同步功能。</p><p>&nbsp; &nbsp; 当然，你也可以选择安装程序将其安装到您的计算机：<a href="https://github.com/TranslucentTB/TranslucentTB/releases/download/2018.2/TranslucentTB-setup.exe" target="_blank">点我下载</a></p><h4 id="directory022473698782708247">启动</h4><p>&nbsp; &nbsp; 要将 TranslucentTB 添加到开机启动，请检查 TranslucentTB 托盘图标菜单中的“在启动时打开”条目。如果它显示为灰色，则说明在任务管理器或您的组织内禁用 TranslucentTB 启动。</p><hr><h3 id="directory022473698782708248">第二种方案</h3><p>&nbsp; &nbsp; 如果你单纯想让任务栏变透明的话，第一种方案已经可以满足了。而第二种方案可能有些人已经听过它的名字：<strong>StartlsBack++</strong></p><p>&nbsp; &nbsp; <strong>StartlsBack++</strong>是一款开始菜单自定义增强工具，同时它也集成了任务栏透明美化功能。同时如果你怀念Windows 7 的开始菜单的话，你也可以使用这款软件。重要的是，它不需要自启，设置完毕后即可关闭，相比第一种方案，它减少了很多步骤，也是本人正在使用的。</p><blockquote><p><strong>注：</strong>效果图就不放出了，和第一种方案是一样的。</p></blockquote><h4 id="directory022473698782708249">下载</h4><p>正版购买：<a href="http://www.startisback.com/" target="_blank">官网</a></p><blockquote><p>网络上均有大量破解版，请谨慎下载，但在这里本人还是推荐入正。</p></blockquote><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于让Windows桌面任务栏透明化/毛玻璃化的方案。&lt;br&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://markjuruo.ooo/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="经验" scheme="https://markjuruo.ooo/tags/%E7%BB%8F%E9%AA%8C/"/>
    
      <category term="转载" scheme="https://markjuruo.ooo/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>[项目] EasyHexo-Hexo从入门到入土</title>
    <link href="https://markjuruo.ooo/2018/10/19/xiang-mu-easyhexo-hexo-cong-ru-men-dao-ru-tu/"/>
    <id>https://markjuruo.ooo/2018/10/19/xiang-mu-easyhexo-hexo-cong-ru-men-dao-ru-tu/</id>
    <published>2018-10-19T10:56:00.000Z</published>
    <updated>2018-11-03T07:24:05.686Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/easyhexo.jpg" alt="项目图标"><br>参与了一个小项目，据说是为了给想写博客的同学一个系统的帮助。该项目由一位胸怀大志的同学<a href="https://chungzh.cn/" target="_blank" rel="noopener">ChungZH</a>提出。由于我以前走过的坑和弯路太多了，所以决定把所有的经验整理出来，也算是一种贡献。<br><em>后续将持续更新</em><br><a id="more"></a></p><h2 id="START-Master-ChungZH"><a href="#START-Master-ChungZH" class="headerlink" title="START | Master: ChungZH"></a><a href="https://github.com/EasyHexo/Easy-Hexo" target="_blank" rel="noopener">START</a> | Master: ChungZH</h2><p><img src="https://img.shields.io/github/stars/EasyHexo/Easy-Hexo.svg?style=flat-square&amp;label=⭐%20Stars" alt="GitHub stars"> <img src="https://img.shields.io/badge/Made%20with-love-ff69b4.svg?style=flat-square" alt="love"></p><p><img src="/img/easyhexo-pro-begin.jpg" alt="开始啦！"><br><strong>项目名称：</strong>EasyHexo<br><strong>项目地址：</strong><a href="https://github.com/EasyHexo/Easy-Hexo" target="_blank" rel="noopener">https://github.com/EasyHexo/Easy-Hexo</a><br><strong>项目仓库：</strong>Github<br><strong>项目成员：</strong>ChungZH Anoyer MarkJuruo moshiyeap StaunchKai Michael yixiaomie（截止至2018-10-20，8:30）<br><strong>项目内容：</strong>Hexo的入门，基础配置，主题配置，各个主题魔改攻略&amp;部分插件使用套路，适合主题的自定义页面创作，制作个人主题等。<br><strong>项目主旨：</strong>给予想要拥有一个清静、干爽的个人博客的同学一个良好的帮助！<br><strong>项目规划：</strong> <img src="https://camo.githubusercontent.com/b614628046f5f74f7fbb78c7ff4675a9a7b151c9/68747470733a2f2f692e6c6f6c692e6e65742f323031382f31302f32302f356263616330373637613264362e706e67" alt="项目规划图"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/easyhexo.jpg&quot; alt=&quot;项目图标&quot;&gt;&lt;br&gt;参与了一个小项目，据说是为了给想写博客的同学一个系统的帮助。该项目由一位胸怀大志的同学&lt;a href=&quot;https://chungzh.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ChungZH&lt;/a&gt;提出。由于我以前走过的坑和弯路太多了，所以决定把所有的经验整理出来，也算是一种贡献。&lt;br&gt;&lt;em&gt;后续将持续更新&lt;/em&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://markjuruo.ooo/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="项目" scheme="https://markjuruo.ooo/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>NOIP2018游记</title>
    <link href="https://markjuruo.ooo/2018/10/14/noip2018-you-ji/"/>
    <id>https://markjuruo.ooo/2018/10/14/noip2018-you-ji/</id>
    <published>2018-10-14T01:58:00.000Z</published>
    <updated>2018-10-27T00:01:49.273Z</updated>
    
    <content type="html"><![CDATA[<p>从初一我入坑开始，我便经常幻想着有一天能够在这信竞道路上发光发亮。事实证明，我想得真美。<br>我不是一个很实在的人，但是总是很努力地“表现地很努力”。<br>终于，在我最热爱的道路上栽了大跟头。<br>这不是什么值得宣扬的事迹。我也为此痛哭。<br>记录以铭。</p><p>上午是学校的统一体检。我们信奥生便自成一班，早早地做完了所有的检查。<br>我们忍不住欲望跑去了机房。可惜时间所迫，并未有多长时间给我们肝题。离开机房前，我在机房里踱了一圈步。这是我曾经奋斗的地方啊。  <a id="more"></a><br>中午吃了比较丰盛的必胜客。虽然是外卖但还是很开心。我于是趴在车的后座上睡了过去。醒来，便上路了。沿路的风景越来越荒凉，我便知道离考场越来越近了。终于，目的地“杭十四中康桥校区”已然在眼前。<br>周围的景色十分怡人。算不上秀丽，但不那么嘈杂，除了突然窜出来的几辆工程车显得不是很友好。<br>从外面看，杭十四中康桥校区的校园似乎很大，许许多多的教学楼整齐的排列在空旷的校园中。<br>这是非常美好的一天吧。<br>这会是我圆梦的一天吧。</p><p>人多了起来，我们于是蜂拥而入，在校园里走动着，探讨着题目。<br>我们学校的学生非常多，有包场的节奏。我们一群一群，围在一起，互相祝愿，然后各自前往自己的考场。<br>我例行去了趟厕所。厕所很大，窗户外面可以俯视操场。<br>到了考场，那个一脸黑线的监考官已经站在讲台前摆弄着密封的试卷带。<br>“书包要放出去。”<br>他看到我们一群穿着相同校服的同学说道。  </p><p>考试很快就开始。卷子刚发下来，我粗略的扫了一遍，不觉的很难，但也未尝十分容易。<br>“中国青少年计算机协会与哪一年成立？”<br>“不用进行关键字比较的是哪一种排序？”<br>“广域网的简称到底是WAN还是LAN？”<br>“……”<br>我越看越难受，为什么我都不知道。<br>“几道选择题，没什么大不了的”<br>我这样安慰自己，往下读题。<br>“一道数学题，没什么大不了的”<br>“两道程序题，没什么大不了的”<br>“三、四到完型题，没什么大不了的”<br>“……”<br>“完了。”<br>我十分难受，再看了一遍卷子。我发觉似乎稳的分数只有60多。<br>我于是纠结于那八分一道的程序题。一直纠结到考试结束。<br>没算出来。  </p><p>浙江的确不是一个友好的地方。全国数一数二的信奥强省，是许多人梦寐以求的圣地，却也成为了许许多多信竞人梦想的火葬场。不少人这样调侃着：“信奥的难度进阶：入门-&gt;简单-&gt;普通-&gt;困难-&gt;炼狱-&gt;浙江”。我实力本就不强，却又生在了浙江赛区，没有足够的努力，何来送到门前的荣耀。<br>“一个连文化课都不得尽善的人却去搞竞赛，可笑至极。”<br>如果我能从这次失败中吸取教训的话。<br>那也许是我至今最大的成功。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从初一我入坑开始，我便经常幻想着有一天能够在这信竞道路上发光发亮。事实证明，我想得真美。&lt;br&gt;我不是一个很实在的人，但是总是很努力地“表现地很努力”。&lt;br&gt;终于，在我最热爱的道路上栽了大跟头。&lt;br&gt;这不是什么值得宣扬的事迹。我也为此痛哭。&lt;br&gt;记录以铭。&lt;/p&gt;
&lt;p&gt;上午是学校的统一体检。我们信奥生便自成一班，早早地做完了所有的检查。&lt;br&gt;我们忍不住欲望跑去了机房。可惜时间所迫，并未有多长时间给我们肝题。离开机房前，我在机房里踱了一圈步。这是我曾经奋斗的地方啊。
    
    </summary>
    
      <category term="随笔" scheme="https://markjuruo.ooo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="游记" scheme="https://markjuruo.ooo/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>VBS从入门到入土</title>
    <link href="https://markjuruo.ooo/2018/10/03/vbs-cong-ru-men-dao-ru-tu/"/>
    <id>https://markjuruo.ooo/2018/10/03/vbs-cong-ru-men-dao-ru-tu/</id>
    <published>2018-10-03T09:24:00.000Z</published>
    <updated>2018-11-03T10:17:37.566Z</updated>
    
    <content type="html"><![CDATA[<p>首先，想学VBScript的同学们必须知道，如果是真的想要学好编程的，那么VBSCript不该作为长久的选择，学习VBScript为的是基本了解编程语言中的基本语法（所有的程序语言语法都是相通的）。VBScript上手快，成效快，因而很适合程序新手学习。<br>开始学习前希望您具备以下基本条件：</p><ul><li style="list-style: none"><input type="checkbox" checked> 有一定英语基础</li><li style="list-style: none"><input type="checkbox" checked> 有一定耐心</li><li style="list-style: none"><input type="checkbox" checked> Windows操作系统（本人不清楚Linux/Mac是否可以）</li><li style="list-style: none"><input type="checkbox" checked> 本文针对程序小白而写，请各位大佬快速护目<a id="more"></a></li></ul><h2 id="如何编写-编译VBScript程序"><a href="#如何编写-编译VBScript程序" class="headerlink" title="如何编写/编译VBScript程序"></a>如何编写/编译VBScript程序</h2><p>由于我们现在学习的VBScript没有专门的编辑器，于是我们可以选择在记事本/写字板中书写程序。<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/VBS1.jpg" alt="在记事本中编写VBScript程序"><br>写好一个VBScript程序之后，只要把该文件的后缀名改为.vbs即可，计算机会自动编译。要注意，这边一定要把文件类型选择为所有类型，要不然会有些不可描述的错误。<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/VBS2.jpg" alt="保存VBS文件"><br>如果需要再次编辑同一个VBScript文件的话，可以右击该VBScript文件，然后选择【打开方式】，选择记事本即可。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>其实这样写的话顺序是有点问题的，理论上应当先讲变量。但是鉴于同学们希望早点看到自己写的程序的作用，就先把最基本的输出讲掉。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Msgbox</span> <span class="string">"Boy♂Next♂Door"</span></span><br></pre></td></tr></table></figure></p><p>同学们吧以上语句复制到文本框中然后按以上讲的方法编译。点开来之后，同学们会发现自己的第一个程序已经可以正常运行了。<br>这个程序的意义就是：把”Boy♂Next♂Door”这一串字串放到消息提示框里输出。<code>Msgbox</code>（MessageBox)，就是一个保留关键字。</p><h3 id="什么是关键字？"><a href="#什么是关键字？" class="headerlink" title="什么是关键字？"></a>什么是关键字？</h3><p>关键字就是VBScript中可以进行操作的单词/符号。可以理解为英语中的动词，告诉你接下来要干什么。在VBScript中，关键字没有大小写规范。形象一点的说，就是前面的讲到的那个最基本的<code>Msgbox</code>有以下几种<strong>正确</strong>写法。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">msgbox</span></span><br><span class="line"><span class="built_in">MsgBox</span></span><br><span class="line"><span class="built_in">msgBox</span></span><br><span class="line"><span class="built_in">MSGBOX</span></span><br><span class="line"><span class="keyword">and</span> more...</span><br></pre></td></tr></table></figure></p><p>在具体的程序实现中，同学们就可以根据自己个人的习惯选择写法。</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量很好很好理解，但是很难彻底搞懂它的用途，而且如果是第一次听到的话——  </p><blockquote><p><strong>“这种累赘的东西，不如不要”——鲁迅</strong></p></blockquote><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1538389500476&amp;di=18e7e3aff7fa97b5df2e9682424ffbf2&amp;imgtype=0&amp;src=http%3A%2F%2Fp0.ifengimg.com%2Fpmop%2F2017%2F1117%2FB7DC518906A75A682ECECA24BE5CB857247A9FB1_size17_w500_h321.jpeg" alt="鲁迅"><br><strong>先看下面一个例子</strong><br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> a</span><br><span class="line">a=<span class="string">"Boy♂Next♂Door"</span></span><br><span class="line"><span class="built_in">Msgbox</span> a</span><br></pre></td></tr></table></figure></p><p>简单的说，变量就是一个箱子，里面装着一个东西，我们称这个东西为该变量的值。在引用某个变量的时候，事实上用的变量的值，也就是说，上面那个程序里面的<code>Msgbox a</code>和直接<code>Msgbox &quot;Boy♂Next♂Door&quot;</code>等效。</p><h3 id="变量的类型"><a href="#变量的类型" class="headerlink" title="变量的类型"></a>变量的类型</h3><p>讲到变量就不得不提一个很影响人的心情的知识点，这也是学习过程中的第一个难点——<strong>变量的类型</strong>。变量的类型是由变量里具体存的值决定的。比如我们刚讲到的那个程序：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> a</span><br><span class="line">a=<span class="string">"Boy♂Next♂Door"</span></span><br><span class="line"><span class="built_in">Msgbox</span> a</span><br></pre></td></tr></table></figure></p><p>其中a就是一种<strong>字符串类型</strong>，我们可以简单的理解为它的值是由许多字符组成的。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> a</span><br><span class="line">a=<span class="number">1</span></span><br><span class="line"><span class="built_in">Msgbox</span> a</span><br></pre></td></tr></table></figure></p><p>此时，<code>a=1</code>，那么a就是一个数字类型了。<br>由于我们学的VBScript语言没有严格的变量规定，于是我们都用<code>dim</code>来声明变量，然后给这个变量赋值后计算机会根据其值自动判断其变量类型。在我的母语C++中，变量有着非常严格的要求，不同的类型有不同的关键字来声明，大家感受一下即可：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这是C++语言，大家不必深入了解</span></span><br><span class="line"><span class="keyword">int</span> a;<span class="comment">//数字类型</span></span><br><span class="line"><span class="keyword">bool</span> b;<span class="comment">//布尔类型（false/true）</span></span><br><span class="line"><span class="keyword">char</span> c;<span class="comment">//字符类型（只有一个字符）</span></span><br><span class="line"><span class="built_in">string</span> d;<span class="comment">//字符串类型（有多个字符）</span></span><br></pre></td></tr></table></figure></p><h3 id="不同类型变量间的运算符"><a href="#不同类型变量间的运算符" class="headerlink" title="不同类型变量间的运算符"></a>不同类型变量间的运算符</h3><p>提一句，在VBScript程序中出现<code>rem</code>，就便是其后面的语言都是用于注释，也就是不会被执行。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> a,b,c,d <span class="keyword">rem</span> 声明a,b,c,d四个变量</span><br><span class="line">a=<span class="number">1</span></span><br><span class="line">b=<span class="number">1</span></span><br><span class="line">c=<span class="string">"Boy♂NexT♂"</span></span><br><span class="line">d=<span class="string">"Door"</span></span><br><span class="line"><span class="built_in">Msgbox</span> a+b</span><br><span class="line"><span class="built_in">Msgbox</span> c+d</span><br><span class="line"><span class="built_in">Msgbox</span> a&amp;c</span><br></pre></td></tr></table></figure></p><p>这个程序中a,b都为数字类型，于是他们进行+运算就是和我们数学上的运算一样，但c和d是字符串类型，所以他们进行+运算就是把这两个字符串连接在一起。最后一句：<code>Msgbox a&amp;c</code>这边a和c之间用了&amp;连接（shift+7)，是因为它们的类型不一样，<strong>当类型不同又想在同一个MessageBox中输出，就得用&amp;把他们连接在一起。</strong>当然，在MsgBox中同类型也可以用&amp;链接<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> a,b <span class="keyword">rem</span> 声明a,b两个变量</span><br><span class="line"><span class="keyword">dim</span> c</span><br><span class="line">a=<span class="number">1</span></span><br><span class="line">b=<span class="number">2</span></span><br><span class="line">c=a+b</span><br><span class="line"><span class="built_in">Msgbox</span> a&amp;<span class="string">"+"</span>&amp;b<span class="string">"="</span>&amp;c</span><br></pre></td></tr></table></figure></p><p>此时,我们又声明了一个变量：c来保存a+b的值。因为a和b都是数字类型，于是c也自然而然的为数字类型了。输出的时候注意”+”和”=”都是字符（串）类型，所以a,b,c和”+”，”=”的类型不同，在Msgbox中得用&amp;连接。</p><h4 id="值得思考的问题"><a href="#值得思考的问题" class="headerlink" title="值得思考的问题"></a>值得思考的问题</h4><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> a,b,c <span class="keyword">rem</span> 声明a,b,c三个变量</span><br><span class="line">a=<span class="string">"1"</span></span><br><span class="line">b=<span class="string">"2"</span></span><br><span class="line">c=a+b</span><br></pre></td></tr></table></figure><p>在这样一个程序中，c=a+b，由于a,b都是字符（串）类型，导致c也是字符串类型。前面讲到字符串运算中，+表示连接，因此，c的值此时就为”12”。问题来了：<strong>如何让c的值为数字a+数字b呢？（也就是如何令c=1+2的值而非”1”+”2”的值）</strong>。我们有一种特殊的处理方法：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="number">0</span>+a+b</span><br></pre></td></tr></table></figure></p><p>此时，计算机发现0是一个数字，也就会默认把c的值确定为数字类型了。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>之所以先讲变量，就是为了为这里的输入做铺垫。从这里开始，我们学的程序才真正开始有点意思了。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> a</span><br><span class="line">a=Iputbox(<span class="string">"输入些东西。。。"</span>)</span><br><span class="line"><span class="built_in">Msgbox</span> a</span><br></pre></td></tr></table></figure></p><p>这个程序里多了个新东西——<code>Inputbox</code>。也就是输入框。这个输入框的作用就是让用户输入信息，然后把用户输入信息的值赋值给变量前面的变量。而Inputbox里面的东西就是提示信息。</p><h3 id="课后练习-小试牛刀"><a href="#课后练习-小试牛刀" class="headerlink" title="课后练习-小试牛刀"></a>课后练习-小试牛刀</h3><p>尝试写一个程序，达到以下效果：<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/VBS3.jpg" alt="示例1"><br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/VBS4.jpg" alt="示例2"><br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/VBS5.jpg" alt="示例3"><br>请认真完成后再打开<a href="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/first.vbs" target="_blank" rel="noopener"><strong>正解</strong></a></p><h2 id="If-Else判断语句"><a href="#If-Else判断语句" class="headerlink" title="If-Else判断语句"></a>If-Else判断语句</h2><p>接下来是更加有意思的了，并且接下来我们学习的程序将会变得长♂起来。<br>假如我想实现这么一个程序：让用户输入一个值，假如值为“markjuruo”，则输出“他是个大帅哥”，否则输出“他是头大笨驴”，该如何实现？<br>我们先来看一下正解：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> name</span><br><span class="line">name=<span class="built_in">Inputbox</span>(<span class="string">"你叫什么？"</span>)</span><br><span class="line"><span class="keyword">If</span> name=<span class="string">"markjuruo"</span> <span class="keyword">Then</span></span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"他是个大帅哥"</span></span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"他是头大笨驴"</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure></p><p>这里有可能会略微有点难以理解，但不要急，我会慢慢讲。</p><h3 id="If的三种形态"><a href="#If的三种形态" class="headerlink" title="If的三种形态"></a>If的三种形态</h3><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">If</span> 条件 <span class="keyword">Then</span></span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure><p>当条件成立时，从<code>Then</code>到<code>EndIf</code>间的所有程序才会被执行。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">If</span> 条件 <span class="keyword">Then</span></span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure></p><p>如果条件成立，那么运行从<code>Then</code>到<code>Else</code>之间的所有程序。如果条件为假，那么运行从<code>Else</code>到<code>EndIf</code>之间的所有程序。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">If</span> 条件<span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">ElseIf</span> 条件<span class="number">2</span> <span class="keyword">Then</span> </span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure></p><p><strong>这是if语句的究极形态，学会了它就可以为♂所♂欲♂为！</strong>。如果条件1成立，那么执行从<code>If 条件1 Then</code>到<code>ElseIf</code>之间的内容，如果条件2成立，那么执行从<code>ElseIf 条件2 Then</code>到<code>Else</code>之间的内容。如果条件1和条件2都不成立，那么就<br>执行从<code>Else</code>到<code>EndIf</code>之间的内容。<br>需要注意的是，这里可以有多个<code>ElseIf</code>出现，比如：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">If</span> 条件<span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">ElseIf</span> 条件<span class="number">2</span> <span class="keyword">Then</span> </span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">ElseIf</span> 条件<span class="number">3</span> <span class="keyword">Then</span></span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">ElseIf</span> 条件<span class="number">4</span> <span class="keyword">Then</span></span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure></p><p>并且，在<code>If,ElseIf</code>的结构中可以省略<code>Else</code>，比如：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">If</span> 条件<span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">ElseIf</span> 条件<span class="number">2</span> <span class="keyword">Then</span> </span><br><span class="line">运行程序</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure></p><p><strong>注：以上所有<code>If</code>，<code>End If</code>，<code>Else</code>，<code>ElseIf</code>的大小写全部可以自己决定</strong><br>这边确实有一点难以理解，但是稍加思考，肯定可以成功的。<br>至此，我们再回头看那刚开始学的程序：</p><blockquote><p>假如我想实现这么一个程序：让用户输入一个值，假如值为“markjuruo”，则输出“他是个大帅哥”，否则输出“他是头大笨驴”，该如何实现？  </p></blockquote><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> name <span class="keyword">rem</span> 声明变量name</span><br><span class="line">name=<span class="built_in">Inputbox</span>(<span class="string">"你叫什么？"</span>) <span class="keyword">rem</span> 输入name的值</span><br><span class="line"><span class="keyword">If</span> name=<span class="string">"markjuruo"</span> <span class="keyword">then</span></span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"他是个大帅哥"</span> </span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"他是头大笨驴"</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure><p>需要注意的是，<code>If</code>中的<code>=</code>表示判断两个数是不是相等，如果相等，那么条件式成立。例如该程序中<code>If name=&quot;markjuruo&quot; Then</code>，就是当name的值为”markjuruo”时，条件式成立。<strong>当然喽，这里的比较只是同类型之间的，如果类型不相同的话就肯定不相同，比如13不等于“13”</strong></p><h3 id="课后练习-自制计算器问题"><a href="#课后练习-自制计算器问题" class="headerlink" title="课后练习-自制计算器问题"></a>课后练习-自制计算器问题</h3><p>首先输入两个数，然后再输入计算的符号（中文的“加”，“减”，“乘”，“除”），最后输出计算的结果。同时判断如果输入的计算符号不合法（就是不为“加”，“减”，“乘”，“除”中的任何一个），那么输出“Are You Killing Me ? ? ? ”<br>由于可能<del>对你们来说</del>难度有点大，我给出一点提示：<br><strong>写法1</strong> | 先把答案保存在变量ans中，最后输出（这是一种好习惯）<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> num1,num2,task,ans <span class="keyword">rem</span> 数字<span class="number">1</span>，数字<span class="number">2</span>，计算符号，结果</span><br><span class="line">num1=<span class="built_in">inputbox</span>(<span class="string">"输入数字1"</span>)</span><br><span class="line">num2=<span class="built_in">inputbox</span>(<span class="string">"输入数字2"</span>)</span><br><span class="line">task=<span class="built_in">inputbox</span>(<span class="string">"输入计算符号"</span>)</span><br><span class="line"><span class="keyword">if</span> task=<span class="string">"+"</span> <span class="keyword">Then</span></span><br><span class="line">ans=<span class="number">0</span>+num1+num2 <span class="keyword">rem</span> 前面加上<span class="number">0</span>，强制转为数字相加</span><br><span class="line"><span class="keyword">ElseIf</span> task=<span class="string">"-"</span> <span class="keyword">Then</span></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"Are You Killing Me ? ? ? "</span></span><br><span class="line">EndIf</span><br><span class="line"><span class="built_in">Msgbox</span> num1&amp;task&amp;num2&amp;<span class="string">"="</span>ans <span class="keyword">rem</span> 想一想这一句的效果</span><br></pre></td></tr></table></figure></p><p><strong>写法2</strong> | 算出来就输出<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> num1,num2,task <span class="keyword">rem</span> 数字<span class="number">1</span>，数字<span class="number">2</span>，计算符号</span><br><span class="line">num1=<span class="built_in">inputbox</span>(<span class="string">"输入数字1"</span>)</span><br><span class="line">num2=<span class="built_in">inputbox</span>(<span class="string">"输入数字2"</span>)</span><br><span class="line">task=<span class="built_in">inputbox</span>(<span class="string">"输入计算符号"</span>)</span><br><span class="line"><span class="keyword">if</span> task=<span class="string">"+"</span> <span class="keyword">Then</span></span><br><span class="line"><span class="built_in">Msgbox</span> num1&amp;task&amp;num2&amp;<span class="string">"="</span>&amp;(<span class="number">0</span>+num1+num2)</span><br><span class="line"><span class="keyword">ElseIf</span> task=<span class="string">"-"</span> <span class="keyword">Then</span></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"Are You Killing Me ? ? ? "</span></span><br><span class="line">EndIf</span><br></pre></td></tr></table></figure></p><p><strong><a href="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/VBS.vbs" target="_blank" rel="noopener">正解</a></strong><br><strong>超高难度变式</strong> | 前面不变，但是除法要算出整除得到的商和余数。（取余符号：mod，比如8 mod 3=2，7 mod 2=1）</p><h2 id="阶段性技巧总结"><a href="#阶段性技巧总结" class="headerlink" title="阶段性技巧总结"></a>阶段性技巧总结</h2><p>计算符号问题：在VBScript中，基本的加减乘除四则运算符号为<code>+,-,*,/</code>不可以用×或÷。求余符号为<code>mod</code>。其它的运算暂时不学习。</p><hr><p>用了一段时间的<code>Inputbox</code>之后同学们会发现，不论用户往<code>Inputbox</code>中输入什么数据，它总会把这个数据变成字符串类型的。比如你输入一个13，它却会给你“13”，在之后运算的过程中还得+0处理才能当做数字使用，十分不雅观。于是我们可以在输入的时候就处理掉：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> number</span><br><span class="line">number=<span class="built_in">Inputbox</span>(<span class="string">"输入一个数字"</span>)+<span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>这时，number就可以直接作为数字使用。这里可能有同学不明白了,<code>Inputbox()</code>怎么还能+0呢？这里要好好理解，<code>Inputbox()</code>其实也是有值的，它的值就是用户输入的值。接下来学到函数就会明白，<code>Inputbox()</code>是一个函数，它是有返回值的，当然现在不必深究，了解即可，应当循序渐进。</p><hr><p>在<code>Msgbox</code>中如何换行？？很简单，只要在需要换号的地方加上<code>chr(13)</code>就行了。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Msgbox</span> <span class="string">"Hello!"</span>&amp;<span class="built_in">chr</span>(<span class="number">13</span>)&amp;<span class="string">"How are you?"</span></span><br></pre></td></tr></table></figure></p><p>这种方法当然在<code>Inputbox</code>中等效：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> ipt</span><br><span class="line">ipt=<span class="built_in">Inputbox</span>(<span class="string">"Hello!"</span>&amp;<span class="built_in">chr</span>(<span class="number">13</span>)&amp;<span class="string">"What's your name?"</span>)</span><br></pre></td></tr></table></figure></p><hr><p><code>If</code>中的判断语法有哪些？上次我们在讲到<code>If-Else</code>语法中只提到一种判断方式：判断两个（同类型的）变量的值是否相同。此处拓展一些：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> a,b</span><br><span class="line">a=<span class="number">1</span></span><br><span class="line">b=<span class="number">2</span></span><br><span class="line"><span class="keyword">If</span> a=b <span class="keyword">then</span> <span class="keyword">rem</span> 判断是否相等</span><br><span class="line"><span class="keyword">ElseIf</span> a&lt;b <span class="keyword">then</span> <span class="keyword">rem</span> 判断a是否小于b</span><br><span class="line"><span class="keyword">ElseIf</span> a&gt;b <span class="keyword">then</span> <span class="keyword">rem</span> 同理</span><br><span class="line"><span class="keyword">ElseIf</span> a&lt;&gt;b <span class="keyword">then</span> <span class="keyword">rem</span> 判断a是否不等于b</span><br></pre></td></tr></table></figure></p><p>别的当然还有很多，但此处不做拓展。</p><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>请务必掌握了前面讲到的所有语法后再学习本节内容<br>很好，你已经学会了许多VBScript用法了！但是光凭以上提到的语法，程序的质量和作用都不会很高。现在，我们要来学习一个分重要的语法：循环语句。<br>先来看一个小问题：让你将1~10分别输出，该怎么做？<br>凭借我们之前学习的语法，自然而然就会想到：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Msgbox</span> <span class="string">"1"</span></span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"2"</span></span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"3"</span></span><br><span class="line">...</span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"9"</span></span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"10"</span></span><br></pre></td></tr></table></figure></p><p>那么，如果我要输出1~100呢？<br>甚至是1~1e7呢？<br>很明显，上述方法的效率就显得过于低下了。我先给出正解，之后会细讲语法，这一块内容有很强的综合性，我们将会结合之前学过的<code>If</code>语法进行学习。<br>在这一节，我们将会接触两种循环方式，以上题为例：<br><strong>For循环</strong><br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">For</span> i=<span class="number">1</span> <span class="keyword">To</span> <span class="number">10</span></span><br><span class="line"><span class="built_in">Msgbox</span> i</span><br><span class="line"><span class="keyword">Next</span></span><br></pre></td></tr></table></figure></p><p><strong>Do-Loop循环</strong><br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> i</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">Do</span></span><br><span class="line">i=i+<span class="number">1</span></span><br><span class="line"><span class="built_in">Msgbox</span> i</span><br><span class="line"><span class="keyword">If</span> i=<span class="number">10</span> <span class="keyword">Then</span></span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Do</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">Loop</span></span><br></pre></td></tr></table></figure></p><h3 id="Do-Loop循环"><a href="#Do-Loop循环" class="headerlink" title="Do-Loop循环"></a>Do-Loop循环</h3><p>鉴于这个循环使用到了我们之前所学习的<code>If</code>语法，可能会更好理解些，故而先讲。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Do</span></span><br><span class="line">运行程序（循环体）</span><br><span class="line"><span class="keyword">Loop</span></span><br></pre></td></tr></table></figure></p><p><code>Do-Loop</code>循环十分好理解，就是把<code>Do</code>和<code>Loop</code>中间的程序一直重复执行。鉴于这样一直运行会让人不爽，我们就需要在一定的条件下终止运行。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Do</span></span><br><span class="line">运行程序（循环体）</span><br><span class="line"><span class="keyword">If</span> 条件满足 <span class="keyword">Then</span></span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Do</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">Loop</span></span><br></pre></td></tr></table></figure></p><p>这时候，我们原先学习的<code>If</code>语法就起了极大的作用。当满足条件时，执行语句<code>Exit Do</code>。<code>Exit Do</code>，顾名思义，就是退出循环。例如我们刚看到的那个示例程序：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> i</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">Do</span></span><br><span class="line">i=i+<span class="number">1</span> <span class="keyword">rem</span> 自增<span class="number">1</span>，这个好好理解下</span><br><span class="line"><span class="built_in">Msgbox</span> i <span class="keyword">rem</span> 输出i</span><br><span class="line"><span class="keyword">If</span> i=<span class="number">10</span> <span class="keyword">Then</span> <span class="keyword">rem</span> 当i等于<span class="number">10</span>时，退出循环</span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Do</span> </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">Loop</span></span><br></pre></td></tr></table></figure></p><p>这里面有一个语法：<code>i=i+1</code>，这个需要好好理解，有的同学可能会这样想：比如i=1，那岂不是<code>1=1+1</code>了吗？<strong>注意，i是一个变量！在执行<code>i=i+1</code>时是把<code>i+1</code>的值赋给了i。</strong>当然如果实在理解不了，那就这样写：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> x</span><br><span class="line">x=i</span><br><span class="line">i=x+<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>这样分开写就更好理解了。</p><h3 id="For循环"><a href="#For循环" class="headerlink" title="For循环"></a>For循环</h3><p>这个循环将会非常常用，但理解起来可能有点复杂。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">For</span> i=<span class="number">1</span> <span class="keyword">To</span> <span class="number">10</span></span><br><span class="line">运行程序（循环体）</span><br><span class="line"><span class="keyword">Next</span></span><br></pre></td></tr></table></figure></p><p>在这个程序中，i充当了计数器的作用。<code>For i=1 To 10</code>也就是i从1到10循环，每次循环都把<code>For</code>与<code>Next</code>之间的内容执行一遍。应当注意这里的i不需要提前声明，在<code>For i=1 To 10</code>中，i已经被系统自动声明了。<br>这里有一个重点是：这个程序中i只能在循环体内使用（涉及到了全局变量和局部变量，比较复杂，好好理解）。也就是：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">For</span> i=<span class="number">1</span> <span class="keyword">To</span> <span class="number">10</span></span><br><span class="line"><span class="built_in">Msgbox</span> i <span class="keyword">rem</span> <span class="keyword">For</span>中声明的i变量只能在<span class="keyword">For</span>-<span class="keyword">Next</span>之间用</span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"><span class="built_in">Msgbox</span> i <span class="keyword">rem</span> 在这里用i系统会报错，因为<span class="keyword">For</span>结束后i变量会被自动清空</span><br></pre></td></tr></table></figure></p><p><strong>拓展</strong> | 如何才能让i每一次递增k<br>之前讲到的For循环，每一次都是默认递增1的，但是如何做到每一次都递增k（即任意实数）呢？<br>举一个比较实际的例子：试写一个程序，输出0~n之间的偶数。我这里直接放出正解：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> n</span><br><span class="line">n=<span class="built_in">Inputbox</span>(<span class="string">"输入n的值"</span>)</span><br><span class="line"><span class="keyword">For</span> i=<span class="number">0</span> <span class="keyword">To</span> n <span class="keyword">Step</span> <span class="number">2</span></span><br><span class="line"><span class="built_in">Msgbox</span> i</span><br><span class="line"><span class="keyword">Next</span></span><br></pre></td></tr></table></figure></p><p>注意到了吗？<code>For i=0 To n</code>的后面加上了<code>Step 2</code>,这就表示每次都递增2。<br>当然喽，这种<code>For-Next</code>语句中很多量都是可以自定义的：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">For</span> OK=OK <span class="keyword">To</span> OK <span class="keyword">Step</span> OK</span><br></pre></td></tr></table></figure></p><p>其中标注<code>OK</code>的都是可以自己调控的量。  </p><p><strong>接着拓展</strong> | 如何倒过来输出0~n的偶数？即以n,n-2,n-4…4,2,0的顺序输出<br>这个问题乍一看摸不着头脑，但只要掌握了前面讲的“<code>For-Next</code>循环很多量都是可以自己定义的”就不难解决了。<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> n</span><br><span class="line">n=<span class="built_in">Inputbox</span>(<span class="string">"输入n的值"</span>)</span><br><span class="line"><span class="keyword">For</span> i=n <span class="keyword">To</span> <span class="number">0</span> <span class="keyword">Step</span> <span class="number">-2</span></span><br><span class="line"><span class="built_in">Msgbox</span> i</span><br><span class="line"><span class="keyword">Next</span></span><br></pre></td></tr></table></figure></p><p>怎么样？是不是恍然大悟？  </p><p><strong>再来个拓展</strong> | 如何根据特殊条件终端For循环？<br>还记得<code>Exit Do</code>吗？相信同学们猜得到结束For循环就是<code>Exit For</code>了。而根据特殊条件嘛，就是一个简单的If判断，轻松解决，此处不多赘述了。</p><h3 id="课后练习-求和问题"><a href="#课后练习-求和问题" class="headerlink" title="课后练习-求和问题"></a>课后练习-求和问题</h3><p>首先用户输入一个n，接下来输入n个数，最后请输出这n个数的和。<strong>温馨提示</strong>：别忘了强制转为数字类型<br><a href="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/VBS求和问题.vbs" target="_blank" rel="noopener"><strong>正解</strong></a></p><p><strong>超高难度变式</strong> | 这个若是<del>对你们来说</del>能自己做出来就不得了了<br>前面都一样，但是最后输出的形式为$x_1+x_2+x_3+…+x_n=sum$，其中$x_i$表示输入的第i个数，$sum$表示它们的和。例如：“1+4+5+2=12”  </p><blockquote><p>提示一下，还记得字符串怎样相加的吗？可以设置一个字符串，每一次循环都在该字符串的最后加上“+$x_i$”，最后就可以得到一个字符串形如”$x_1+x_2+x_3…+x_n$”  </p></blockquote><p><a href="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/VBS求和问题-变式.vbs" target="_blank" rel="noopener"><strong>正解</strong></a></p><h3 id="课后练习-求最大值问题"><a href="#课后练习-求最大值问题" class="headerlink" title="课后练习-求最大值问题"></a>课后练习-求最大值问题</h3><p>首先用户输入一个n，接下来输入n个数，最后请输出这n个数中的最大数为多少。（这道题<del>对你们来说</del>也蛮难的）</p><blockquote><p>提示一下，可以设置一个最大值max，然后先让这个max等于第一个输入的数，然后之后每一次输入都比较max和输入的数，如果max比输入的数小就更新max的值。  </p></blockquote><p><a href="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/VBS求最大值问题.vbs" target="_blank" rel="noopener"><strong>正解</strong></a></p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>大部分语言都有函数，VBScript也不例外。当然，这里讲的函数和我们数学上的不大一样。<strong>在VBScript中，函数就是定义一段过程</strong>。我们来放轻松，看一段简单的函数代码：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> AWC()</span><br><span class="line"><span class="built_in">Msgbox</span> <span class="string">"Ass We Can"</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure></p><p>这就是一个函数。简洁，清晰。那么写好这个函数之后，在程序中我们就可以这样用它：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AWC()</span><br></pre></td></tr></table></figure></p><p>我来举个十分有意思的比喻：我们一般的写程序，可以理解为堂食，买来了就吃，而函数就类似于打包，买来了，要吃的时候再拿出来吃，而且想吃多少次就吃多少次。</p><h3 id="带参数的函数"><a href="#带参数的函数" class="headerlink" title="带参数的函数"></a>带参数的函数</h3><p>讲到函数就不得不将参数。参数是什么？我们来看看下面这个简单的例子：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> Say(<span class="keyword">dim</span> sb,<span class="keyword">dim</span> say) <span class="keyword">rem</span> 这个s.b.是somebody的意思</span><br><span class="line"><span class="built_in">Msgbox</span> sb+<span class="string">"说"</span>+say</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure></p><p>这里，sb和say就是参数。参数就相当于函数运算过程中需要用到的变量，可以有，也可以没有，可以多，也可以少。那么带参数的函数，我们在引用的时候是不能加上括号的：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Say <span class="string">"我"</span>,<span class="string">"AssWeCan"</span></span><br></pre></td></tr></table></figure></p><p>（这里比较难理解，我也不知道我讲清楚了没，如有不懂的在下面提问即可）</p><h3 id="课后练习-求阶乘和问题"><a href="#课后练习-求阶乘和问题" class="headerlink" title="课后练习-求阶乘和问题"></a>课后练习-求阶乘和问题</h3><p>这道题是我们信奥生在初学的时候的必做题，<del>对我们来说</del>十分简单，至少它没有涉及算法内容，放到这里来，给大家练练手。<br>让用户输入一个n，然后输出$1!+2!+3!+4!+…+n!$的值。</p><blockquote><p>提示：计算每个数的阶乘的过程可以写成函数。</p></blockquote><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>很好，你已经学到数组了。<br>这是一个很有趣的东西，而且我懒的解释，大家自己看程序就能立马明白它的用途：<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dim</span> <span class="built_in">array</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">array</span>(<span class="number">1</span>)=<span class="string">"我"</span></span><br><span class="line"><span class="built_in">array</span>(<span class="number">2</span>)=<span class="string">"是"</span></span><br><span class="line"><span class="built_in">array</span>(<span class="number">3</span>)=<span class="string">"你爸爸"</span></span><br><span class="line"><span class="built_in">Msgbox</span> <span class="built_in">array</span>(<span class="number">1</span>)+<span class="built_in">array</span>(<span class="number">2</span>)+<span class="built_in">array</span>(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></p><p>是不是很简单？不就是几个量的集合嘛！</p><h3 id="动态数组"><a href="#动态数组" class="headerlink" title="动态数组"></a>动态数组</h3><p>//不行，我实在写不动了。。。</p><p>（持续更新中。。。）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先，想学VBScript的同学们必须知道，如果是真的想要学好编程的，那么VBSCript不该作为长久的选择，学习VBScript为的是基本了解编程语言中的基本语法（所有的程序语言语法都是相通的）。VBScript上手快，成效快，因而很适合程序新手学习。&lt;br&gt;开始学习前希望您具备以下基本条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 有一定英语基础&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 有一定耐心&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; Windows操作系统（本人不清楚Linux/Mac是否可以）&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot; checked&gt; 本文针对程序小白而写，请各位大佬快速护目
    
    </summary>
    
      <category term="杂记" scheme="https://markjuruo.ooo/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>[EOJ] Monthly 2018.10一题总结(模拟)</title>
    <link href="https://markjuruo.ooo/2018/10/02/eoj-monthly-2018-10-yi-ti-zong-jie/"/>
    <id>https://markjuruo.ooo/2018/10/02/eoj-monthly-2018-10-yi-ti-zong-jie/</id>
    <published>2018-10-02T14:39:00.000Z</published>
    <updated>2018-11-03T10:16:36.412Z</updated>
    
    <content type="html"><![CDATA[<p>由于我太蒻了，所以只写对了一题的代码：《Problem A. oxx 的小姐姐们》<br>由于我太蒻了，看不出这是数学题，就打了个十分暴力的模拟程序。  </p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>oxx 和他的小姐姐（们）躺在图书馆前的大草坪上看星星。<br>有强迫症的 oxx 想要使得他的小姐姐们正好躺成一块$n×m$的长方形。<br>已知小姐姐的形状是$1×p$的长方形（可以横着或竖着躺）。小姐姐从$1$到$nm$编号总共有$nm$个（如果可以的话，绝对够用）。<br>P.S. 小姐姐是$1×p$的是因为她们比较苗条。<br><a id="more"></a></p><h2 id="输入说明"><a href="#输入说明" class="headerlink" title="输入说明"></a>输入说明</h2><p>输入三个整数$n, m, p$($1≤n,m,p≤100$，$p$是质数)。</p><h2 id="输出说明"><a href="#输出说明" class="headerlink" title="输出说明"></a>输出说明</h2><p>如果不行，输出<code>No</code>。<br>否则输出<code>Yes</code>。随后输出$n$行$m$列正整数用空格隔开。同一个小姐姐用相同的数字表示，不同的小姐姐用不同的数字表示。数字应是在$[1，nm]$范围内的正整数。同一个数字至多出现$p$ 次，这$p$次应该在横向连续，或者纵向连续。<br>如果有多解输出任意一解。  </p><h2 id="输入输出示例"><a href="#输入输出示例" class="headerlink" title="输入输出示例"></a>输入输出示例</h2><p>见原题目（数据太多了，懒得复制）<br><a href="https://acm.ecnu.edu.cn/contest/113/problem/A/" target="_blank" rel="noopener">EOJ Monthly 2018.10 - A. oxx 的小姐姐们</a></p><h2 id="满分暴力"><a href="#满分暴力" class="headerlink" title="满分暴力"></a>满分暴力</h2><p>我的思路：先放竖着的姐姐，然后扫一遍地图看看还有没有空余，若有空余就放横着的姐姐。由于事先判断了是否能刚好放成$nm$的长方形，因此之后就大胆的摆即可。当然全部摆好了之后也不忘记严谨的扫一遍图，看有没有剩下没放了（虽然没有实际作用了）<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,p;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">map</span>[MAXN][MAXN];</span><br><span class="line"><span class="keyword">int</span> rewn,rewm,tmpn,tmpm;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;p);</span><br><span class="line"><span class="keyword">if</span>((n*m)%p)&#123;<span class="comment">//p不是nm的倍数肯定就放不了了</span></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;<span class="comment">//小姐姐计数器</span></span><br><span class="line"><span class="keyword">if</span>(p&lt;=n)&#123;<span class="comment">//如果竖排放得下</span></span><br><span class="line">    <span class="keyword">int</span> tmp=<span class="number">1</span>;<span class="comment">//在当前这一高度时横着摆了几个竖排</span></span><br><span class="line">    <span class="keyword">int</span> h=<span class="number">1</span>;<span class="comment">//当前摆到第几行了</span></span><br><span class="line">    <span class="keyword">while</span>(h&lt;=n-p+<span class="number">1</span>)&#123;<span class="comment">//一直放小姐姐直到当前行放不下为止</span></span><br><span class="line">        <span class="keyword">while</span>(tmp&lt;=m)&#123;<span class="comment">//在这一行一直放小姐姐直到放满这一列</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">map</span>[h][tmp])&#123;<span class="comment">//（其实没啥用）如果当前行为空</span></span><br><span class="line">                ++count;<span class="comment">//小姐姐计数器++</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=h;i&lt;=h+p<span class="number">-1</span>;i++)&#123;</span><br><span class="line">                    <span class="built_in">map</span>[i][tmp]=count;<span class="comment">//纵向放置小姐姐</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ++tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        h+=p;<span class="comment">//调到下一高度</span></span><br><span class="line">        tmp=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">true</span>;<span class="comment">//flag=false</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">        flag&amp;=<span class="built_in">map</span>[i][j];<span class="comment">//flag|=map[i][j];</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//扫一遍图。。。注释里是第一遍时写的，，滑稽地卡在了第七个点</span></span><br><span class="line"><span class="keyword">if</span>(!flag &amp;&amp; p&lt;=m)&#123;<span class="comment">//如果还没放满，那么接着放横向小姐姐</span></span><br><span class="line">    <span class="keyword">int</span> tmp=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> w=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(w&lt;=m-p+<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(tmp&lt;=n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">map</span>[tmp][w])&#123;</span><br><span class="line">                ++count;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=w;i&lt;=w+p<span class="number">-1</span>;i++)&#123;</span><br><span class="line">                    <span class="built_in">map</span>[tmp][i]=count;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ++tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        w+=p;</span><br><span class="line">        tmp=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">   flag=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">        flag&amp;=<span class="built_in">map</span>[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//再扫一遍图</span></span><br><span class="line"><span class="keyword">if</span>(!flag)&#123;<span class="comment">//如果仍然没放满那么输出No</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">map</span>[i][j]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于我太蒻了，所以只写对了一题的代码：《Problem A. oxx 的小姐姐们》&lt;br&gt;由于我太蒻了，看不出这是数学题，就打了个十分暴力的模拟程序。  &lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;oxx 和他的小姐姐（们）躺在图书馆前的大草坪上看星星。&lt;br&gt;有强迫症的 oxx 想要使得他的小姐姐们正好躺成一块$n×m$的长方形。&lt;br&gt;已知小姐姐的形状是$1×p$的长方形（可以横着或竖着躺）。小姐姐从$1$到$nm$编号总共有$nm$个（如果可以的话，绝对够用）。&lt;br&gt;P.S. 小姐姐是$1×p$的是因为她们比较苗条。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="https://markjuruo.ooo/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="模拟" scheme="https://markjuruo.ooo/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>图论-二分图匹配</title>
    <link href="https://markjuruo.ooo/2018/09/26/tu-lun-er-fen-tu-pi-pei/"/>
    <id>https://markjuruo.ooo/2018/09/26/tu-lun-er-fen-tu-pi-pei/</id>
    <published>2018-09-26T13:54:00.000Z</published>
    <updated>2018-11-04T01:10:07.731Z</updated>
    
    <content type="html"><![CDATA[<h2 id="匈牙利算法"><a href="#匈牙利算法" class="headerlink" title="匈牙利算法"></a>匈牙利算法</h2><p>本文内容<del>大</del>部分参考<strong>Dark_Scope</strong>《<a href="https://blog.csdn.net/sunny_hun/article/details/80627351" target="_blank" rel="noopener">趣写算法系列之–匈牙利算法</a> 》<br>这是一个有趣的算法。没有复杂的技巧，只是几句循环判断<br>形象地说，在这个算法中，我们充当的是媒婆的角色，帮助两方的角色进行匹配。 </p><blockquote><p>匈牙利算法是一种在多项式时间内求解任务分配问题的组合优化算法，并推动了后来的原始对偶方法。美国数学家哈罗德·库恩于1955年提出该算法。此算法之所以被称作匈牙利算法，是因为算法很大一部分是基于以前匈牙利数学家Dénes Kőnig$和Jenő Egerváry的工作之上创建起来的。<br>—— By 著名权威学者-百度词条</p></blockquote><a id="more"></a><h3 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h3><p><strong>举个比较实际的栗子</strong><br>lzh非常喜欢立Flag，他成立了自己的立Flag团（一下简称F团）。今天F团团长lzh又招到了新人手，lzh开始感到麻烦了，因为他不知道怎样给F团的新成员们分配flag。<br>lzh给新成员们展示了可供分配的flag，然后询问了每个新成员的心仪的flag。他找到了你，想让你解决这个分配问题。<strong>lzh会提供给你可供分配的旗帜信息、每个成员的信息和他们的心仪flag</strong>。保证没有哪个<del>不可描述的</del>成员会对未提供的flag感兴趣。<br>于是乎，我们现在需要做的就是给F团的新成员<strong>分配flag并且最好让每个人都能拿到自己喜欢的flag</strong>。我们可以把这个问题先抽象成一张图来：把人和旗帜先分成两队。<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/EFT1.png" alt="二分图"><br>我们假设滑稽1，2喜欢爆0（暴少了个火字旁实在抱歉），滑稽1喜欢溢出，滑稽1，2，3，4都喜欢AK-IOI，于是可得出关系图。图中黄色的先表示喜欢（当然是理解为有向，只有人会喜欢flag，flag不会喜欢人的）<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/EFT2.png" alt="步骤图"><br>开始分配旗帜，首先把滑稽1所心仪的第一个未被分配的旗帜分配给他，也就是爆0，其中用蓝色的线表示该旗帜分配给滑稽1，则可得图。<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/EFT3.png" alt="步骤图"><br>紧接着按照上一步，把滑稽2喜欢的第一个未被分配的旗帜分配给他。这时发现滑稽1已经把爆0分配到了，那么此时采用和平原则，滑稽2退而分配AK-IOI，则可得图。<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/EFT4.png" alt="步骤图"><br>轮到滑稽3了，发觉：不好！AK-IOI被滑稽2拿走了！滑稽3不甘把AK-IOI的机会让给滑稽2，于是和滑稽2进行了深度沟通，于是滑稽2答应的换面旗帜。<br>滑稽2答应后发觉事情没这么简单，他唯一能换的旗帜被滑稽1拿走了。于是他只好去和滑稽1聊了聊。滑稽1于是好心的让出了爆0的旗帜，选择了溢出。其中橙色的线表示暂时撤销该分配关系。<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/EFT6.png" alt="步骤图"><br>于是滑稽2可以换上了爆0的旗帜<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/EFT7.png" alt="步骤图"><br>滑稽3开心的拿到了AK-IOI的旗帜<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/EFT8.png" alt="步骤图"><br>接下来留下了滑稽4，可是不论怎样让步也无法给他腾出他心仪的旗帜了（可以自己推导一下）。于是我们就得到了最终的分配情况。<br><img src="https://coding.net/u/linzhihan/p/blogimg/git/raw/master/EFT9.png" alt="步骤图"></p><h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><p>简单的DFS+循环。前置条件当然是得会写个简单的递归函数。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> i,j;</span><br><span class="line">   <span class="keyword">for</span> (j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">       <span class="comment">//扫描每个flag</span></span><br><span class="line">       <span class="keyword">if</span>(line[x][j]==<span class="literal">true</span> &amp;&amp; used[j]==<span class="literal">false</span>)&#123;</span><br><span class="line">      used[j]=<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span>(girl[j]==<span class="number">0</span> || find(girl[j]))&#123; </span><br><span class="line">          girl[j]=x;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（持续更新中…）</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;匈牙利算法&quot;&gt;&lt;a href=&quot;#匈牙利算法&quot; class=&quot;headerlink&quot; title=&quot;匈牙利算法&quot;&gt;&lt;/a&gt;匈牙利算法&lt;/h2&gt;&lt;p&gt;本文内容&lt;del&gt;大&lt;/del&gt;部分参考&lt;strong&gt;Dark_Scope&lt;/strong&gt;《&lt;a href=&quot;https://blog.csdn.net/sunny_hun/article/details/80627351&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;趣写算法系列之–匈牙利算法&lt;/a&gt; 》&lt;br&gt;这是一个有趣的算法。没有复杂的技巧，只是几句循环判断&lt;br&gt;形象地说，在这个算法中，我们充当的是媒婆的角色，帮助两方的角色进行匹配。 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;匈牙利算法是一种在多项式时间内求解任务分配问题的组合优化算法，并推动了后来的原始对偶方法。美国数学家哈罗德·库恩于1955年提出该算法。此算法之所以被称作匈牙利算法，是因为算法很大一部分是基于以前匈牙利数学家Dénes Kőnig$和Jenő Egerváry的工作之上创建起来的。&lt;br&gt;—— By 著名权威学者-百度词条&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="学习" scheme="https://markjuruo.ooo/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="算法" scheme="https://markjuruo.ooo/categories/%E5%AD%A6%E4%B9%A0/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="二分图匹配" scheme="https://markjuruo.ooo/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>[体育课日志] 大雨，大雨 9.20</title>
    <link href="https://markjuruo.ooo/2018/09/23/ti-yu-ke-ri-zhi-da-yu-da-yu/"/>
    <id>https://markjuruo.ooo/2018/09/23/ti-yu-ke-ri-zhi-da-yu-da-yu/</id>
    <published>2018-09-23T07:39:00.000Z</published>
    <updated>2018-11-03T07:24:16.331Z</updated>
    
    <content type="html"><![CDATA[<p>这样闷热的日子已经持续好几天了。我们没什么身体上的不爽，但就是不过瘾。已经入了秋，总得抓住夏天的尾巴，好好的下一场痛快的大雨。<br>南方的天气，果真羞涩，总像是藏着掖着，让人难受。或者说，我不大习惯这种扭捏的风态。至少，在活泼的夏天里，这种态度实在不是很友好。<br>每一节体育课，我们都盼着跑完这一圈就忽然乌云密布，然后“哗”的把腹中的雨水全都倾盆而下。可是每次都是失望，伴着抱怨，躲在树荫下，看着天边几小的可笑的卷云飘啊飘啊。。。<br>然后，它就下了。<br>毫无预备的下了。彻彻底底的下了。不可收拾的下了。<br>像一个肾结石的病人做完手术从病房出来，撒的第一泡尿一样，，痛快。<a id="more"></a><br>我们吓傻了，然后欢呼，然后假装一脸正经的，奔跑起来。<br>把体育老师抛在了一边。<br>一哄而散。</p><p>9月中旬的一堂体育课。艳阳高照，但是起了点不小的风。我们早已打消了下大雨的念头，认真的听着唐老师的安排。<br>“唐老师的头发好像是紫色的。”我听到我旁边的同学讲。<br>“哪里，明明是黑的。”另一位同学争辩道。<br>这似乎是很平常的一节体育课，不过凡事要特地提到“平常”的事物多半不平常。<br>“今天天气不错，”唐老师讲。“我们，就，练练500米。”<br>“诶。”我想，这又是一节普通的体育课。不过这样又怎样呢？体育课本来就应当十分正常。我想着。<br>气喘吁吁的我们跑完了第一组，然后就象征性的聊起了天。<br>“你做过楼天成男人必做24题吗。”<br>“没。”<br>“你觉得如何把骗分技巧运用到日常学科中来。”<br>“滚。”<br>“你觉得昨天那道图论的题目能不能用动规做。”<br>“蛤。”<br>“……”<br>“你觉得今天会下雨吗？”<br>“嗯？”<br>好久没听到这么敏感的句子了。同学指了指天空，原来早已变了色。也许刚才在跑步，没注意到。也许是早已麻痹了神经，不在关心。不过我仍不是抱有太大希望。毕竟，有多少次，满天是乌云，天黑的和黄昏一样，却滴点未下，只是带来潮湿的热气罢了。我于是默默的站起来，笑出声来。<br>“爱下不下。”<br>第二组跑完了。面红耳赤的我们终于完成了任务，可以正式自由活动了。我们分散在操场的各个角落，享受着自由的快感，没有人有任何防备。太阳仍然在头顶上，但天黑的很快。<br>忽然，一滴湿湿的东西滴到了我手上。好像是细雨丝，不过很少很少，微不足道，好像并没有引起多少人的注意。<br>可我忽然起了点疑心，赶紧拉上旁边的几个同学往教学楼方向走去。这大概是一种直觉吧。<br>我们操场不算小，就算是跑一时半会也到不了能遮雨的地方，万一下下来，在空荡荡的操场上，可就玩大了。<br>我们半躲在教学楼的玻璃门前，看着操场上嬉笑的同学。初一、初二、初三都有，至少是4,5个班的同学，毫无遮掩的暴露在操场上。<br>事实证明我的抉择是正确的。<br>豆大的，甚至土豆大的雨滴狠狠的砸了下来。从操场的一侧倾覆过来。顿时，场上一片“妈耶”的喊声。所有人，都朝教学楼跑来。而我们几个，就站在里面，像是等着收门票。<br>一秒，绝不大于一秒，像是从水盆里倒出来的一样，剧烈的暴雨就吞噬了整个操场。虽然科学研究表明，在雨量均匀的情况下，不考虑风的影响，同一受雨表面在走路和跑步时所接受到的雨水的量相差不大，但是这个时候没有哪头笨驴会顾得上思考这种东西。<br>操场空了，体育老师也都各回各办公室了。<br>我们终于都平安地回到了教室。<br>我看着湿透了的同学们，忽然有一丝愧疚。但他们似乎很兴奋，为这场突如其来的雨，欢呼起来。<br>不过，就当我们都以为闹剧结束了时，发现班里少了两个人。<br>我们往窗外看去，发现操场上居然还有两个人在并肩悠然散步。<br>我也不好意思骂他们智力障碍了，也许这就是个性，也许这就是最洒脱的友情。</p><p>暴雨像开关失调的水龙头一样不断歇地下到隔天早晨，后来才知道是受了强台风山竹的影响。<br>每家每户的窗户前都像水帘洞的瀑布，从“滴滴答答”到“哗哗啦啦”。<br>散去了叫人怀念的热气。<br>金秋已至。。。。。？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这样闷热的日子已经持续好几天了。我们没什么身体上的不爽，但就是不过瘾。已经入了秋，总得抓住夏天的尾巴，好好的下一场痛快的大雨。&lt;br&gt;南方的天气，果真羞涩，总像是藏着掖着，让人难受。或者说，我不大习惯这种扭捏的风态。至少，在活泼的夏天里，这种态度实在不是很友好。&lt;br&gt;每一节体育课，我们都盼着跑完这一圈就忽然乌云密布，然后“哗”的把腹中的雨水全都倾盆而下。可是每次都是失望，伴着抱怨，躲在树荫下，看着天边几小的可笑的卷云飘啊飘啊。。。&lt;br&gt;然后，它就下了。&lt;br&gt;毫无预备的下了。彻彻底底的下了。不可收拾的下了。&lt;br&gt;像一个肾结石的病人做完手术从病房出来，撒的第一泡尿一样，，痛快。
    
    </summary>
    
      <category term="随笔" scheme="https://markjuruo.ooo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日志" scheme="https://markjuruo.ooo/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>[Reach-Top] 普及模拟赛反思(模拟/排序/...)</title>
    <link href="https://markjuruo.ooo/2018/09/22/reach-top-pu-ji-mo-ni-sai-fan-si/"/>
    <id>https://markjuruo.ooo/2018/09/22/reach-top-pu-ji-mo-ni-sai-fan-si/</id>
    <published>2018-09-22T12:28:00.000Z</published>
    <updated>2018-11-03T07:24:21.817Z</updated>
    
    <content type="html"><![CDATA[<p>好吧不得不说这份卷子算完全是信心赛的简单难度，结果我因为怀着检查一下评测机的质量而为Problem-B写了个O3优化而白白丢了一整题的分数，心痛。以后不能再做这种傻事了。题解内容正在撰写中。。。<br>本次测试包含算法：<del>魔改</del>排序，模拟。<del>好吧我故意把暴力漏了。</del></p><h2 id="Problem-B"><a href="#Problem-B" class="headerlink" title="Problem B"></a>Problem B</h2><p>水明老师因为视力不好，只能看到长度为2的字符串，例如AB，AA，BA，所以它将长度为2的字符串称为水明字符串，现在小曹老师送了它一个长度为n（由大写英文字母组成）的字符串，水明老师想找到其中出现次数最多的水明字符串<br>BBAABBBA 的答案是BB出现了3次<br><a id="more"></a></p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h3><blockquote><p>第一行输入n  ，2≤n≤100</p><p>第二行输入n个字符</p></blockquote><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h3><blockquote><p>输出答案</p><p>若出现多个解，输出第一个出现的水明字符串</p></blockquote><h3 id="示例数据"><a href="#示例数据" class="headerlink" title="示例数据"></a>示例数据</h3><p>输入</p><blockquote><p>7<br>ABACABA</p></blockquote><p>输出</p><blockquote><p>AB</p></blockquote><h3 id="解题报告"><a href="#解题报告" class="headerlink" title="解题报告"></a>解题报告</h3><p>暂空</p><h2 id="Problem-D"><a href="#Problem-D" class="headerlink" title="Problem D"></a>Problem D</h2><p>水明老师想玩一会儿数字游戏，现在它有一些整数x，并将其写在黑板上，之后对其进行n-1次操作，每次操作有两种方式可选：</p><blockquote><p>1：将x除以3，必须保证x是3的倍数<br>2：将x乘以2</p></blockquote><p>在结束操作之后，水明老师将结果写在黑板上，（原来的那些数字x当然要先被擦掉），那结果将以随机顺序作为你们的输入，即肯定不会和黑板上的顺序一致<br>那你们的任务是将水明老师给你们的数字重新排列之后与黑板上的序列进行匹配，看看能否一致。<br>输出的数列要满足的条件是：第i个数是第i-1个数的两倍或者三分之一（第一个数就随意咯）<br>保证有解且唯一</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>输入的第一行包含整数n（2≤n≤100） - 序列中元素的数量。<br>输入的第二行包含n个整数a1，a2，…，an（1≤ai≤3*1018）</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>输出答案</p></blockquote><h3 id="示例数据-1"><a href="#示例数据-1" class="headerlink" title="示例数据"></a>示例数据</h3><p>输入</p><blockquote><p>6<br>4 8 6 3 12 9</p></blockquote><p>输出</p><blockquote><p>9 3 6 12 4 8</p></blockquote><h3 id="解题报告-1"><a href="#解题报告-1" class="headerlink" title="解题报告"></a>解题报告</h3><p>第一遍提交，就是没什么技术含量的暴力DFS。每个数都搜索过去，按照题目要求，因为保证有解且只有一个解，所以一旦搜到了答案就直接输出并退出程序。<br>第一次提交用的暴力代码，尝试写出了54分很满意了。。。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">110</span>]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solution</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==n+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="comment">//        cout&lt;&lt;666&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            ans[++flag]=st.top();</span><br><span class="line">            st.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i])&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">1</span>)&#123;</span><br><span class="line">            vis[i]=<span class="literal">true</span>;</span><br><span class="line">            st.push(a[i]);</span><br><span class="line">            solution(<span class="number">2</span>);</span><br><span class="line">            st.pop();</span><br><span class="line">            vis[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==st.top()*<span class="number">2</span>||a[i]==st.top()/<span class="number">3</span>)&#123;</span><br><span class="line">                st.push(a[i]);</span><br><span class="line">                vis[i]=<span class="literal">true</span>;</span><br><span class="line">                solution(x+<span class="number">1</span>);</span><br><span class="line">                vis[i]=<span class="literal">false</span>;</span><br><span class="line">                st.pop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    solution(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>成功地骗到了54分，还是十分自豪的，但是和正解的思路完全不同。<strong>吊唁正解带节奏</strong>。</p><p>正解的思路很简单：“第i个数是第i-1个数的两倍或者三分之一”，转换一下就是“第i个数是第i-1个数的两倍，第i-1个数是第i个数的三倍”那么就可以以此作为排序标准。算出每个数中2和3因数的个数，然后2越多排在越后面，3越多排在越前面。于是我们可以得知，只要算出了每个数因数中2，3的个数，那么我们就可以根据其包含因数3的个数减去包含2的因数个数的大小进行排序。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">setNum</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> index;<span class="comment">//当前数字的编号</span></span><br><span class="line"><span class="keyword">int</span> rawdata;<span class="comment">//当前数字的数值</span></span><br><span class="line"><span class="keyword">int</span> p2,p3;<span class="comment">//包含2,3的因子数量</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">rawdata=num;</span><br><span class="line">index=i;</span><br><span class="line"><span class="keyword">int</span> temp=num;</span><br><span class="line">p2=p3=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(temp%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">temp&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">p2++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(temp%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line">temp/=<span class="number">3</span>;</span><br><span class="line">p3++;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//计算包含2,3的因子数量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> setNum cmpnumo,<span class="keyword">const</span> setNum cmpnum)&#123;</span><br><span class="line"><span class="keyword">if</span>(cmpnumo.p3-cmpnumo.p2!=cmpnum.p3-cmpnum.p2)&#123;</span><br><span class="line"><span class="keyword">return</span> cmpnumo.p3-cmpnumo.p2&gt;cmpnum.p3-cmpnum.p2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cmpnumo.index&gt;cmpnum.index;</span><br><span class="line">        <span class="comment">//如果之前的比较结果相同，就按初始顺序排列</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//重定义&lt;，之后排序就可以不再写cmp了</span></span><br><span class="line">&#125;;</span><br><span class="line">setNum arr[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;temp;</span><br><span class="line">arr[i].init(temp,i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">sort(arr,arr+n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;arr[i].rawdata&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（持续更新中…）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好吧不得不说这份卷子算完全是信心赛的简单难度，结果我因为怀着检查一下评测机的质量而为Problem-B写了个O3优化而白白丢了一整题的分数，心痛。以后不能再做这种傻事了。题解内容正在撰写中。。。&lt;br&gt;本次测试包含算法：&lt;del&gt;魔改&lt;/del&gt;排序，模拟。&lt;del&gt;好吧我故意把暴力漏了。&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&quot;Problem-B&quot;&gt;&lt;a href=&quot;#Problem-B&quot; class=&quot;headerlink&quot; title=&quot;Problem B&quot;&gt;&lt;/a&gt;Problem B&lt;/h2&gt;&lt;p&gt;水明老师因为视力不好，只能看到长度为2的字符串，例如AB，AA，BA，所以它将长度为2的字符串称为水明字符串，现在小曹老师送了它一个长度为n（由大写英文字母组成）的字符串，水明老师想找到其中出现次数最多的水明字符串&lt;br&gt;BBAABBBA 的答案是BB出现了3次&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="https://markjuruo.ooo/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="模拟" scheme="https://markjuruo.ooo/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="排序" scheme="https://markjuruo.ooo/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="题目陷阱" scheme="https://markjuruo.ooo/tags/%E9%A2%98%E7%9B%AE%E9%99%B7%E9%98%B1/"/>
    
  </entry>
  
  <entry>
    <title>[NowCoder] 分则能成(模拟)</title>
    <link href="https://markjuruo.ooo/2018/09/22/nowcoder-fen-ze-neng-cheng-1/"/>
    <id>https://markjuruo.ooo/2018/09/22/nowcoder-fen-ze-neng-cheng-1/</id>
    <published>2018-09-22T01:23:00.000Z</published>
    <updated>2018-11-03T07:24:35.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>牛牛刚开始有一个正整数n。<br>每次操作牛牛可以选择一个自己有的数字x，把x分为两正整数y和z，需满足x=y+z，然后获得y×z的收益。<br>（当然，在这个过程中，牛牛会失去x这个数字，并且获得y和z这2个数字。）<br>牛牛一共可以分k次，牛牛希望最大化这k次的收益之和。<br>因为分割的结果y和z是正整数，所以选择的x必须&gt;=2。<br><a id="more"></a><br>对于100%的数据，1 &lt;= k &lt; n &lt;= 109<br>对于40%的数据，1 &lt;= k &lt; n &lt;= 10<br>对于70%的数据，1 &lt;= k &lt; n &lt;= 100  </p><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h3><blockquote><p>输入只有一行，包含用空格分开的两个整数，表示n和k。</p></blockquote><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h3><blockquote><p>输出一行一个整数，表示答案。</p></blockquote><h3 id="示例数据"><a href="#示例数据" class="headerlink" title="示例数据"></a>示例数据</h3><p>输入</p><blockquote><p>9 2</p></blockquote><p>输入</p><blockquote><p>27</p></blockquote><p>说明</p><blockquote><p>刚开始牛牛有{9}<br>把9分为3和6，牛牛现在有{6, 3}<br>把6分为3和3，牛牛现在有{3, 3, 3}<br>总收益为6<em>3+3</em>3 = 27。</p></blockquote><h2 id="解题报告"><a href="#解题报告" class="headerlink" title="解题报告"></a>解题报告</h2><p>第一次提交，我想都没想就写了个全部平均分<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vec;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findmax</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxn=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vec.size();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(maxn&lt;vec[i])&#123;</span><br><span class="line">            maxn=vec[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vec.size();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vec[i]==maxn)&#123;</span><br><span class="line">            vec[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tasknum,n;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;tasknum&gt;&gt;n;</span><br><span class="line">    vec.push_back(tasknum);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=findmax();</span><br><span class="line">        <span class="keyword">int</span> y,z;</span><br><span class="line">        <span class="keyword">if</span>(x%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            y=z=x/<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            y=x/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">            z=x/<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;y&lt;&lt;<span class="string">","</span>&lt;&lt;z&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        ans+=y*z;</span><br><span class="line">        vec.push_back(y);</span><br><span class="line">        vec.push_back(z);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（持续更新中…）</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;牛牛刚开始有一个正整数n。&lt;br&gt;每次操作牛牛可以选择一个自己有的数字x，把x分为两正整数y和z，需满足x=y+z，然后获得y×z的收益。&lt;br&gt;（当然，在这个过程中，牛牛会失去x这个数字，并且获得y和z这2个数字。）&lt;br&gt;牛牛一共可以分k次，牛牛希望最大化这k次的收益之和。&lt;br&gt;因为分割的结果y和z是正整数，所以选择的x必须&amp;gt;=2。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="https://markjuruo.ooo/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="模拟" scheme="https://markjuruo.ooo/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>[体育课日志] 摔了个大跤 9.4-9.19</title>
    <link href="https://markjuruo.ooo/2018/09/20/shuai-liao-ge-da-jiao-you-gan-hou-ji/"/>
    <id>https://markjuruo.ooo/2018/09/20/shuai-liao-ge-da-jiao-you-gan-hou-ji/</id>
    <published>2018-09-20T14:10:00.000Z</published>
    <updated>2018-11-03T07:24:43.533Z</updated>
    
    <content type="html"><![CDATA[<p>2018年的九月份里的一天，本该是开学初美好的日子。<br>这天体育课上来了一位新的体育老师，我远瞅他一脸黑线，心里忽然有点失望，初一时那个乐呵呵的老楼不教我们班了，换了一个外表目前看来不大友好的老师。<br>那位老师走近了，我才发现他似乎有点帅。头发染了一点淡淡的紫色，戴着方框细边的眼镜，不大的眼睛上是模糊的双眼皮。棱角分明的下巴，还有一点凌乱的胡髭，散发着男人的气息。<br>“上课铃响了没！？”他冲着散漫的学生们吼道。声音也那么富有磁性。我想着，急忙跑来立定。<br>“三班的学生，我带了一年了”他顿了顿，“四班的新同学们，这个学期也由我来教。我姓唐，就叫我唐老师。”话音刚落，我们就用力鼓掌，“唐老师好！”“唐老师辛苦了！”……  <a id="more"></a><br>“我的要求很简单。”唐老师挥挥手示意我们安静，然后用高亢些的声音说道，“不吵不闹，听指挥行事，有什么特殊原因的必须打报告。”唐老师清了清嗓子，“另外，体育课上受了点皮外小伤，别像个娘们儿一样的哇哇叫，给我看过，然后自己去医务室治疗。”<br>三班的同学听着，开始不耐烦的窃窃私语起来。唐老师看着他们，眼睛睁大了点，轻轻地但十分具有杀伤力的说了句“怎么的啊，想给四班同学示范一下违反纪律的后果啊。”<br>三班的同学半怂半滑稽地应着“不不不不……”<br>唐老师皎洁地笑了笑，“不违反纪律，那就得听我指令行事，给你们普及了一个学年还搞不灵清吗？”<br>“听指令，我们听，我们听”三班的同学半嘲弄地应道。<br>“好，那么三班听令，向右转！5圈不中断，跑步走！”语毕，唐老师转过身来对着我们皎洁地笑着，“以后别学他们这样啊”</p><p>大概是三班那群可怜的同学跑到第三圈时，老师让我们跟在他们后面慢跑两圈。我看着天空，静静地想着“昨天未调完的题”。忽然地、毫无预兆地，我的左脚踩到了我的右脚后跟，然后一个重心不稳，左腿蹭着地滑了出去。 我侧着身子转过来，抓住不知道谁伸过来的手，紧紧握住，站了起来。我活动了一下，没有感到什么不适，但我不敢看我着地的那条腿的膝盖，我想肯定已经磨掉了一层皮。但我想了想，“一点点小小的皮外伤”，我怎么能“像个娘们儿”一样的就脱离队伍。我于是向前加速跑去追上了排头，直至跑完两圈，我才怯怯地找到唐老师。果然这满是血斑的伤口让唐老师难以拒绝我去医务室的请求。<br>学校最近搞好在搞装修，医务室不知道换到哪里了。我就拖着一条腿在学校里痛苦的走来走去。最后在一位不肯透露姓名的好心人的帮助下，我找到了隐藏在图书室深处的学校医务室。我找到医师，坐下来，懊悔着自己的大滑之稽。医师拿着消毒棉签，蘸上满满的“聚维酮碘溶液”（我这一年都不会忘掉这个令人痛苦的名字），然后在我的伤口上涂抹起来。<br>涂了一遍，似乎不够；再涂一遍，依然不够干净……医师仔仔细细的给我涂了好几个来回，终于肯放我走了。而我终于可以走出图书室，放下捂着嘴的手，大声地、痛苦地叫了起来。</p><p>开始的几天非常疼。<br>可怜的我每天晚上都抱着腿，看它有没有结出些疤来。第一天，腿上涂过的“聚维酮碘溶液”在伤口上凝聚起来，像一个个水疱一样，十分狰狞。我一个劲的祈祷，就差每天晚上读一读《圣经》了。毕竟拖这样腿上学实在难受，而且十分的不雅观，影响市容。<br>每天上下楼是最大的挑战，我只得尽量让受伤较严重的左腿保持不动，然后全凭右腿和手臂的力量向上爬（左手使不上劲）。后来疤刚结出来的时候我作死的双脚走了上楼，结果疤上又留了个不小的口子。<br>大课间算是绝缘了，在别人都下楼跑步的时候，我就躲在小教室（我们学校每个班都有大小教室）或是办公室里帮老师打杂。<br>体育课老师给我们订了严格的请假规则，必须是家长、班主任签字才有效。不过我这么大个口子的威慑力远比那一张请假单大多了。我想了想，全局变量初始值默认为0，考试的时候不还都会加个手动赋值0吗。于是，为了以防老师旧的我的伤口是化妆上去的，我还是严谨的开了个单子。<br>过了1周，伤口终于有了痊愈的趋势。我兴高采烈，到操场上跑了5圈慢跑，做了几组引体向上，回家洗了个香香澡，穿上洗白白的衣服。第二天，伤口就化脓了。我不停的往伤口涂那个“聚维酮碘溶液”，希望能脓能快点消掉。本就丑陋的伤口上多了一粒白白的、粘稠的脓，还不时地往外分泌些粘稠的液体，实在让人不爽，甚至无地自容。<br>又过了一天脓就彻底消失了，留下了一个小小的坑。去医务室复查了下，医生叫我以后要矜持一点，我十分认真的答应的。<br>过了约莫2~3天，疤开始掉落。最外层的一圈开始松动。欣喜若狂的我把医生的“矜持一点”的劝告抛在脑后开始挖疤，并乐此不疲。<br>大概是伤口好之前的倒数第4天，我判断失误，把一块没完全痊愈的疤撕了下来。等我惨叫完后，我仔细思考了一下，然后换了个方向接着挖。<br>大概是受伤之后的第二周的最后几天，伤口已经基本痊愈了，只留下几块层次不齐的小的、棕色的厚厚的疤。<br>第三周，伤口已经完全痊愈了，但是留下了一块肤色与周围黝黑的皮肤明显不同的印记。白白的一块，里面有些黑色的斑点。又一次我突发奇想看能不能洗掉它，结果失败了，但我不事后死活承认自己脑子有问题。<br>至此，以闹剧开场的事故平淡的结束了，但是旷了五六节体育课的我得孤身一人去补考1000米，50米，立定跳远和其他。。。</p><p>开学初就摔跤受伤，流了些血，这算“开门红”吗？<br>如果是这样的话，，保佑我今年NOIP初赛能上分数线。。。<br>如果可以的话我可以多摔几次。  </p><p>另：伤口好了之后好久我才又洗了一次香香澡，穿上洗白白的衣服。。。然后一周里都在检查原先破皮的地方有没有发出脓包来。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2018年的九月份里的一天，本该是开学初美好的日子。&lt;br&gt;这天体育课上来了一位新的体育老师，我远瞅他一脸黑线，心里忽然有点失望，初一时那个乐呵呵的老楼不教我们班了，换了一个外表目前看来不大友好的老师。&lt;br&gt;那位老师走近了，我才发现他似乎有点帅。头发染了一点淡淡的紫色，戴着方框细边的眼镜，不大的眼睛上是模糊的双眼皮。棱角分明的下巴，还有一点凌乱的胡髭，散发着男人的气息。&lt;br&gt;“上课铃响了没！？”他冲着散漫的学生们吼道。声音也那么富有磁性。我想着，急忙跑来立定。&lt;br&gt;“三班的学生，我带了一年了”他顿了顿，“四班的新同学们，这个学期也由我来教。我姓唐，就叫我唐老师。”话音刚落，我们就用力鼓掌，“唐老师好！”“唐老师辛苦了！”……
    
    </summary>
    
      <category term="随笔" scheme="https://markjuruo.ooo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日志" scheme="https://markjuruo.ooo/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>人只不过是一根芦苇</title>
    <link href="https://markjuruo.ooo/2018/09/02/ren-zhi-bu-guo-shi-yi-gen-lu-wei/"/>
    <id>https://markjuruo.ooo/2018/09/02/ren-zhi-bu-guo-shi-yi-gen-lu-wei/</id>
    <published>2018-09-02T01:23:29.000Z</published>
    <updated>2018-10-30T14:52:57.867Z</updated>
    
    <content type="html"><![CDATA[<p>人只不过是一根苇草，是自然界最脆弱的东西；但他是一根能思想的苇草。用不着整个宇宙都拿起武器来才能毁灭；一口气、一滴水就足以致他死命了。然而，纵使宇宙毁灭了他，人却仍然要比致他于死命的东西更高贵得多；因为他知道自己要死亡，以及宇宙对他所具有的优势，而宇宙对此却是一无所知。</p><p>因而，我们全部的尊严就在于思想。正是由于它而不是由于我们所无法填充的空间和时间我们才必须提高自己。因此，我们要努力好好地思想；这就是道德的原则。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;人只不过是一根苇草，是自然界最脆弱的东西；但他是一根能思想的苇草。用不着整个宇宙都拿起武器来才能毁灭；一口气、一滴水就足以致他死命了。然而，纵使宇宙毁灭了他，人却仍然要比致他于死命的东西更高贵得多；因为他知道自己要死亡，以及宇宙对他所具有的优势，而宇宙对此却是一无所知。&lt;/
      
    
    </summary>
    
      <category term="随笔" scheme="https://markjuruo.ooo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="收藏" scheme="https://markjuruo.ooo/tags/%E6%94%B6%E8%97%8F/"/>
    
  </entry>
  
</feed>
